// donut minified 
teacss.parsed["../tools/donut/donut.tea"] = {func:(function(){with (teacss.functions){
if (typeof window=='undefined') window = {};
if (!window.donut_loaded) {

/* @import "defaults.tea" */ tea.import("../tools/donut/defaults.tea");

/* @import "utils/utils" */ tea.import("../tools/donut/utils/utils.tea");
/* @import "normalize/normalize" */ tea.import("../tools/donut/normalize/normalize.tea");
/* @import "reset/reset" */ tea.import("../tools/donut/reset/reset.tea");
/* @import "grid/grid" */ tea.import("../tools/donut/grid/grid.tea");
/* @import "typography/typography" */ tea.import("../tools/donut/typography/typography.tea");

/* @import "form/button" */ tea.import("../tools/donut/form/button.tea");
/* @import "form/forms" */ tea.import("../tools/donut/form/forms.tea");
/* @import "form/pagination" */ tea.import("../tools/donut/form/pagination.tea");

/* @import "navigation/navs" */ tea.import("../tools/donut/navigation/navs.tea");
/* @import "navigation/navbar" */ tea.import("../tools/donut/navigation/navbar.tea");

/* @import "layout/wells" */ tea.import("../tools/donut/layout/wells.tea");
/* @import "layout/alerts" */ tea.import("../tools/donut/layout/alerts.tea");

window.donut_loaded = true;

}
}})//@ sourceURL=../tools/donut/donut.tea
};
teacss.parsed["../tools/donut/defaults.tea"] = {func:(function(){with (teacss.functions){
// Images dir
imagesDir = tea.dir + "assets/";

// Colors
black                 = '#000';
grayDarker            = '#222';
grayDark              = '#333';
gray                  = '#555';
grayLight             = '#999';
grayLighter           = '#eee';
white                 = '#fff';

blue                  = '#049cdb';
blueDark              = '#0064cd';
green                 = '#46a546';
red                   = '#9d261d';
yellow                = '#ffc40d';
orange                = '#f89406';
pink                  = '#c3325f';
purple                = '#7a43b6';

// Z-index master list
// Used for a bird's eye view of components dependent on the z-axis
// Try to avoid customizing these :)
zindexDropdown = 1000;
zindexPopover = 1010;
zindexTooltip = 1020;
zindexFixedNavbar = 1030;
zindexModalBackdrop = 1040;
zindexModal = 1050;


// Typography
baseFontSize          = '13px';
baseFontFamily        = '"Helvetica Neue", Helvetica, Arial, sans-serif';
baseLineHeight        = '18px';
textColor             = grayDark;

linkColor             = '#08c';
linkColorHover        = darken(linkColor, 15);

// Form states and alerts
warningText             = '#c09853';
warningBackground       = '#fcf8e3';
warningBorder           = darken(spin(warningBackground, -10), 3);

errorText               = '#b94a48';
errorBackground         = '#f2dede';
errorBorder             = darken(spin(errorBackground, -10), 3);

successText             = '#468847';
successBackground       = '#dff0d8';
successBorder           = darken(spin(successBackground, -10), 5);

infoText                = '#3a87ad';
infoBackground          = '#d9edf7';
infoBorder              = darken(spin(infoBackground, -10), 7);

// Buttons
primaryButtonBackground = linkColor;

// Navbar
navbarHeight                    = '40px';
navbarBackground                = grayDarker;
navbarBackgroundHighlight       = grayDark;

navbarText                      = grayLight;
navbarLinkColor                 = grayLight;
navbarLinkColorHover            = white;
}})//@ sourceURL=../tools/donut/defaults.tea
};
teacss.parsed["../tools/donut/utils/utils.tea"] = {func:(function(){with (teacss.functions){
/* @import "gradient" */ tea.import("../tools/donut/utils/gradient.tea");
/* @import "css3" */ tea.import("../tools/donut/utils/css3.tea");
/* @import "ie7" */ tea.import("../tools/donut/utils/ie7.tea");

clearfix = function () {
    tea.rule("*zoom: 1");
    tea.rule("&:before,\n"+
    "&:after",function(){
        tea.rule("display: table");
        tea.rule("content: \"\"");
    });
    tea.rule("&:after",function(){
        tea.rule("clear: both");
    });
}

tab_focus = function () {
    // Default
    tea.rule("outline: thin dotted");
    // Webkit
    tea.rule("outline: 5px auto -webkit-focus-ring-color");
    tea.rule("outline-offset: -2px");
}

reset_filter = function () {
    tea.rule("filter: e(%(\"progid:DXImageTransform.Microsoft.gradient(enabled = false)\"))");
}   

size = function (w,h) {
    tea.rule("width: "+(w)+"px");
    tea.rule("height: "+(h)+"px");
}

logo = function (url) {
    var img = image(url);
    tea.rule("display: block");
    tea.rule("background: url("+(img.src)+") no-repeat 50% 50%");
    tea.rule("width: "+(img.width)+"px");
    tea.rule("height: "+(img.height)+"px");
    tea.rule("text-indent: -999em");
    return img;
}

}})//@ sourceURL=../tools/donut/utils/utils.tea
};
teacss.parsed["../tools/donut/utils/gradient.tea"] = {func:(function(){with (teacss.functions){
gradient = {}
gradient.bar = function (primaryColor, secondaryColor) {
    gradient.vertical.call(this, primaryColor, secondaryColor);
    tea.rule("border-color: "+(secondaryColor)+" "+(secondaryColor)+" "+(darken(secondaryColor,15)));
    tea.rule("border-color: rgba(0,0,0,0.1) rgba(0,0,0,0.1) "+(fadein("rgba(0,0,0,0.1)", 15)));
}
gradient.horizontal = function (startColor,endColor) {
    startColor = startColor || '#555'; endColor = endColor || '#333';
    tea.rule("background-color: "+(endColor));
    tea.rule("background-image: -moz-linear-gradient(left, "+(startColor)+", "+(endColor)+")"); // FF 3.6+
    tea.rule("background-image: -ms-linear-gradient(left, "+(startColor)+", "+(endColor)+")"); // IE10
    tea.rule("background-image: -webkit-gradient(linear, 0 0, 100% 0, from("+(startColor)+"), to("+(endColor)+"))"); // Safari 4+, Chrome 2+
    tea.rule("background-image: -webkit-linear-gradient(left, "+(startColor)+", "+(endColor)+")"); // Safari 5.1+, Chrome 10+
    tea.rule("background-image: -o-linear-gradient(left, "+(startColor)+", "+(endColor)+")"); // Opera 11.10
    tea.rule("background-image: linear-gradient(left, "+(startColor)+", "+(endColor)+")"); // Le standard
    tea.rule("background-repeat: repeat-x");
    tea.rule("filter: e(%(\"progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)\","+(startColor)+","+(endColor)+"))"); // IE9 and down
}
gradient.vertical = function (startColor, endColor) {
    startColor = startColor || '#555'; endColor = endColor || '#333';
    tea.rule("background-color: "+(mix(startColor, endColor, 60)));
    tea.rule("background-image: -moz-linear-gradient(top, "+(startColor)+", "+(endColor)+")"); // FF 3.6+
    tea.rule("background-image: -ms-linear-gradient(top, "+(startColor)+", "+(endColor)+")"); // IE10
    tea.rule("background-image: -webkit-gradient(linear, 0 0, 0 100%, from("+(startColor)+"), to("+(endColor)+"))"); // Safari 4+, Chrome 2+
    tea.rule("background-image: -webkit-linear-gradient(top, "+(startColor)+", "+(endColor)+")"); // Safari 5.1+, Chrome 10+
    tea.rule("background-image: -o-linear-gradient(top, "+(startColor)+", "+(endColor)+")"); // Opera 11.10
    tea.rule("background-image: linear-gradient(top, "+(startColor)+", "+(endColor)+")"); // The standard
    tea.rule("background-repeat: repeat-x");
    tea.rule("filter: e(%(\"progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)\","+(startColor)+","+(endColor)+"))"); // IE9 and down
}
gradient.directional = function (startColor, endColor, deg) {
    startColor = startColor || '#555'; endColor = endColor || '#333'; deg = deg || '45deg';
    tea.rule("background-color: "+(endColor));
    tea.rule("background-repeat: repeat-x");
    tea.rule("background-image: -moz-linear-gradient("+(deg)+", "+(startColor)+", "+(endColor)+")"); // FF 3.6+
    tea.rule("background-image: -ms-linear-gradient("+(deg)+", "+(startColor)+", "+(endColor)+")"); // IE10
    tea.rule("background-image: -webkit-linear-gradient("+(deg)+", "+(startColor)+", "+(endColor)+")"); // Safari 5.1+, Chrome 10+
    tea.rule("background-image: -o-linear-gradient("+(deg)+", "+(startColor)+", "+(endColor)+")"); // Opera 11.10
    tea.rule("background-image: linear-gradient("+(deg)+", "+(startColor)+", "+(endColor)+")"); // The standard
}
gradient.vertical_three_colors = function (startColor, midColor, colorStop, endColor) {
    startColor = startColor || '#00b3ee'; midColor = midColor || '#7a43b6'; colorStop = colorStop || '50%'; endColor = endColor || '#c3325f';
    tea.rule("background-color: "+(mix(midColor, endColor, 80)));
    tea.rule("background-image: -webkit-gradient(linear, 0 0, 0 100%, from("+(startColor)+"), color-stop("+(colorStop)+", "+(midColor)+"), to("+(endColor)+"))");
    tea.rule("background-image: -webkit-linear-gradient("+(startColor)+", "+(midColor)+" "+(colorStop)+", "+(endColor)+")");
    tea.rule("background-image: -moz-linear-gradient(top, "+(startColor)+", "+(midColor)+" "+(colorStop)+", "+(endColor)+")");
    tea.rule("background-image: -ms-linear-gradient("+(startColor)+", "+(midColor)+" "+(colorStop)+", "+(endColor)+")");
    tea.rule("background-image: -o-linear-gradient("+(startColor)+", "+(midColor)+" "+(colorStop)+", "+(endColor)+")");
    tea.rule("background-image: linear-gradient("+(startColor)+", "+(midColor)+" "+(colorStop)+", "+(endColor)+")");
    tea.rule("background-repeat: no-repeat");
    tea.rule("filter: e(%(\"progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)\","+(startColor)+","+(endColor)+"))"); // IE9 and down, gets no color-stop at all for proper fallback
}
gradient.radial = function (innerColor, outerColor) {
    innerColor = innerColor || '#555'; outerColor = outerColor || '#333';
    tea.rule("background-color: "+(outerColor));
    tea.rule("background-image: -webkit-gradient(radial, center center, 0, center center, 460, from("+(innerColor)+"), to("+(outerColor)+"))");
    tea.rule("background-image: -webkit-radial-gradient(circle, "+(innerColor)+", "+(outerColor)+")");
    tea.rule("background-image: -moz-radial-gradient(circle, "+(innerColor)+", "+(outerColor)+")");
    tea.rule("background-image: -ms-radial-gradient(circle, "+(innerColor)+", "+(outerColor)+")");
    tea.rule("background-repeat: no-repeat");
    // Opera cannot do radial gradients yet
}
gradient.striped = function (color, angle) {
    angle = angle || '-45deg';
    tea.rule("background-color: "+(color));
    tea.rule("background-image: -webkit-gradient(linear, 0 100%, 100% 0, color-stop(.25, rgba(255,255,255,.15)), color-stop(.25, transparent), color-stop(.5, transparent), color-stop(.5, rgba(255,255,255,.15)), color-stop(.75, rgba(255,255,255,.15)), color-stop(.75, transparent), to(transparent))");
    tea.rule("background-image: -webkit-linear-gradient("+(angle)+", rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent)");
    tea.rule("background-image: -moz-linear-gradient("+(angle)+", rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent)");
    tea.rule("background-image: -ms-linear-gradient("+(angle)+", rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent)");
    tea.rule("background-image: -o-linear-gradient("+(angle)+", rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent)");
    tea.rule("background-image: linear-gradient("+(angle)+", rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent)");
}
gradient.stops = function (stops,from) {
    {
        from = from || 'top';

        var stops_css = [];
        for (var i=0;i<stops.length;i++) {
            var stop = stops[i];
            var coord = stop[0];
            var color = stop[1];
            coord = (typeof coord=="number") ? coord + "%" : coord;
            stops_css.push(color.toString() + " " + coord);
        }
        stops_css = stops_css.join(", ");
    }
    tea.rule("background-image: linear-gradient("+(from)+", "+(stops_css)+")");
    tea.rule("background-image: -o-linear-gradient("+(from)+", "+(stops_css)+")");
    tea.rule("background-image: -moz-linear-gradient("+(from)+", "+(stops_css)+")");
    tea.rule("background-image: -webkit-linear-gradient("+(from)+", "+(stops_css)+")");
    tea.rule("background-image: -ms-linear-gradient("+(from)+", "+(stops_css)+")");
}
}})//@ sourceURL=../tools/donut/utils/gradient.tea
};
teacss.parsed["../tools/donut/utils/css3.tea"] = {func:(function(){with (teacss.functions){
border_radius = function (radius) {
    radius = radius || '5px';
    tea.rule("-webkit-border-radius: "+(radius));
          tea.rule("-moz-border-radius: "+(radius));
                    tea.rule("border-radius: "+(radius));
}

// Drop shadows
box_shadow = function (shadow) {
    shadow = shadow || '0 1px 3px rgba(0,0,0,.25)';
    tea.rule("-webkit-box-shadow: "+(shadow));
          tea.rule("-moz-box-shadow: "+(shadow));
                    tea.rule("box-shadow: "+(shadow));
}

// Transitions
transition = function (transition) {
    tea.rule("-webkit-transition: "+(transition));
          tea.rule("-moz-transition: "+(transition));
            tea.rule("-ms-transition: "+(transition));
              tea.rule("-o-transition: "+(transition));
                    tea.rule("transition: "+(transition));
}

// Transformations
rotate = function (degrees) {
    tea.rule("-webkit-transform: rotate("+(degrees)+"deg)");
          tea.rule("-moz-transform: rotate("+(degrees)+"deg)");
            tea.rule("-ms-transform: rotate("+(degrees)+"deg)");
              tea.rule("-o-transform: rotate("+(degrees)+"deg)");
                    tea.rule("transform: rotate("+(degrees)+"deg)");
}
scale = function (ratio) {
    tea.rule("-webkit-transform: scale("+(ratio)+")");
          tea.rule("-moz-transform: scale("+(ratio)+")");
            tea.rule("-ms-transform: scale("+(ratio)+")");
              tea.rule("-o-transform: scale("+(ratio)+")");
                    tea.rule("transform: scale("+(ratio)+")");
}
translate = function (x,y) {
    x = x || 0; y = y || 0;
    tea.rule("-webkit-transform: translate("+(x)+", "+(y)+")");
          tea.rule("-moz-transform: translate("+(x)+", "+(y)+")");
            tea.rule("-ms-transform: translate("+(x)+", "+(y)+")");
              tea.rule("-o-transform: translate("+(x)+", "+(y)+")");
                    tea.rule("transform: translate("+(x)+", "+(y)+")");
}
skew = function (x,y) {
    tea.rule("-webkit-transform: translate("+(x)+", "+(y)+")");
          tea.rule("-moz-transform: translate("+(x)+", "+(y)+")");
            tea.rule("-ms-transform: translate("+(x)+", "+(y)+")");
              tea.rule("-o-transform: translate("+(x)+", "+(y)+")");
                    tea.rule("transform: translate("+(x)+", "+(y)+")");
}
skew = function (x,y) {
    tea.rule("-webkit-transform: skew("+(x)+", "+(y)+")");
          tea.rule("-moz-transform: skew("+(x)+", "+(y)+")");
            tea.rule("-ms-transform: skew("+(x)+", "+(y)+")");
              tea.rule("-o-transform: skew("+(x)+", "+(y)+")");
                    tea.rule("transform: skew("+(x)+", "+(y)+")");
}

// Background clipping
// Heads up: FF 3.6 and under need "padding" instead of "padding-box"
background_clip = function (clip) {
    tea.rule("-webkit-background-clip: "+(clip));
          tea.rule("-moz-background-clip: "+(clip));
                    tea.rule("background-clip: "+(clip));
}

// Background sizing
background_size = function (size) {
    tea.rule("-webkit-background-size: "+(size));
          tea.rule("-moz-background-size: "+(size));
              tea.rule("-o-background-size: "+(size));
                    tea.rule("background-size: "+(size));
}


// Box sizing
box_sizing = function (boxmodel) {
    tea.rule("-webkit-box-sizing: "+(boxmodel));
          tea.rule("-moz-box-sizing: "+(boxmodel));
                    tea.rule("box-sizing: "+(boxmodel));
}

// User select
// For selecting text on the page
user_select = function (select) {
    tea.rule("-webkit-user-select: "+(select));
          tea.rule("-moz-user-select: "+(select));
              tea.rule("-o-user-select: "+(select));
                    tea.rule("user-select: "+(select));
}

// Resize anything
resizable = function (direction) {
    direction = direction || 'both';
    tea.rule("resize: "+(direction)); // Options: horizontal, vertical, both
    tea.rule("overflow: auto"); // Safari fix
}

// CSS3 Content Columns
content_columns = function (columnCount, columnGap) {
    columnGap = columnGap || gridColumnGutter;
    tea.rule("-webkit-column-count: "+(columnCount));
          tea.rule("-moz-column-count: "+(columnCount));
                    tea.rule("column-count: "+(columnCount));
    tea.rule("-webkit-column-gap: "+(columnGap));
          tea.rule("-moz-column-gap: "+(columnGap));
                    tea.rule("column-gap: "+(columnGap));
}

// Opacity
opacity = function (opacity) {
    opacity = opacity || 100;
    tea.rule("opacity: "+(opacity / 100));
      tea.rule("filter: e(%(\"alpha(opacity=%d)\", "+(opacity)+"))");
}
}})//@ sourceURL=../tools/donut/utils/css3.tea
};
teacss.parsed["../tools/donut/utils/ie7.tea"] = {func:(function(){with (teacss.functions){
// IE7 inline-block
// ----------------
ie7_inline_block = function () {
    tea.rule("*display: inline"); /* IE7 inline-block hack */
    tea.rule("*zoom: 1");
}

// IE7 likes to collapse whitespace on either side of the inline-block elements.
// Ems because we're attempting to match the width of a space character. Left
// version is for form buttons, which typically come after other elements, and
// right version is for icons, which come before. Applying both is ok, but it will
// mean that space between those elements will be .6em (~2 space characters) in IE7,
// instead of the 1 space in other browsers.
ie7_restore_left_whitespace = function () {
    tea.rule("*margin-left: .3em");

    tea.rule("&:first-child",function(){
        tea.rule("*margin-left: 0");
    });
}

ie7_restore_right_whitespace = function () {
    tea.rule("*margin-right: .3em");

    tea.rule("&:last-child",function(){
        tea.rule("*margin-left: 0");
    });
}

}})//@ sourceURL=../tools/donut/utils/ie7.tea
};
teacss.parsed["../tools/donut/normalize/normalize.tea"] = {func:(function(){with (teacss.functions){
normalize = function () {

/*! normalize.css 2011-08-12T17:28 UTC · http://github.com/necolas/normalize.css */

/* =============================================================================
   HTML5 display definitions
   ========================================================================== */

/*
 * Corrects block display not defined in IE6/7/8/9 & FF3
 */

tea.rule("article,\n"+
"aside,\n"+
"details,\n"+
"figcaption,\n"+
"figure,\n"+
"footer,\n"+
"header,\n"+
"hgroup,\n"+
"nav,\n"+
"section",function(){
    tea.rule("display: block");
});

/*
 * Corrects inline-block display not defined in IE6/7/8/9 & FF3
 */

tea.rule("audio,\n"+
"canvas,\n"+
"video",function(){
    tea.rule("display: inline-block");
    tea.rule("*display: inline");
    tea.rule("*zoom: 1");
});

/*
 * Addresses styling for 'hidden' attribute not present in IE7/8/9, FF3, S4
 * Known issue: no IE6 support
 */

tea.rule("[hidden]",function(){
    tea.rule("display: none");
});


/* =============================================================================
   Base
   ========================================================================== */

/*
 * 1. Corrects text resizing oddly in IE6/7 when body font-size is set using em units
 *    http://clagnut.com/blog/348/#c790
 * 2. Keeps page centred in all browsers regardless of content height
 * 3. Prevents iOS text size adjust after orientation change, without disabling user zoom
 *    www.456bereastreet.com/archive/201012/controlling_text_size_in_safari_for_ios_without_disabling_user_zoom/
 */

tea.rule("html",function(){
    tea.rule("font-size: 100%"); /* 1 */
    tea.rule("overflow-y: scroll"); /* 2 */
    tea.rule("-webkit-text-size-adjust: 100%"); /* 3 */
    tea.rule("-ms-text-size-adjust: 100%"); /* 3 */
});

/*
 * Addresses margins handled incorrectly in IE6/7
 */

tea.rule("body",function(){
    tea.rule("margin: 0");
});

/*
 * Addresses font-family inconsistency between 'textarea' and other form elements.
 */

tea.rule("body,\n"+
"button,\n"+
"input,\n"+
"select,\n"+
"textarea",function(){
    tea.rule("font-family: sans-serif");
});


/* =============================================================================
   Links
   ========================================================================== */

tea.rule("a",function(){
    tea.rule("color: #00e");
});

tea.rule("a:visited",function(){
    tea.rule("color: #551a8b");
});

/*
 * Addresses outline displayed oddly in Chrome
 */

tea.rule("a:focus",function(){
    tea.rule("outline: thin dotted");
});

/*
 * Improves readability when focused and also mouse hovered in all browsers
 * people.opera.com/patrickl/experiments/keyboard/test
 */

tea.rule("a:hover,\n"+
"a:active",function(){
    tea.rule("outline: 0");
});


/* =============================================================================
   Typography
   ========================================================================== */

/*
 * Addresses styling not present in IE7/8/9, S5, Chrome
 */

tea.rule("abbr[title]",function(){
    tea.rule("border-bottom: 1px dotted");
});

/*
 * Addresses style set to 'bolder' in FF3/4, S4/5, Chrome
*/

tea.rule("b,\n"+
"strong",function(){
    tea.rule("font-weight: bold");
});

tea.rule("blockquote",function(){
    tea.rule("margin: 1em 40px");
});

/*
 * Addresses styling not present in S5, Chrome
 */

tea.rule("dfn",function(){
    tea.rule("font-style: italic");
});

/*
 * Addresses styling not present in IE6/7/8/9
 */

tea.rule("mark",function(){
    tea.rule("background: #ff0");
    tea.rule("color: #000");
});

/*
 * Corrects font family set oddly in IE6, S4/5, Chrome
 * en.wikipedia.org/wiki/User:Davidgothberg/Test59
 */

tea.rule("pre,\n"+
"code,\n"+
"kbd,\n"+
"samp",function(){
    tea.rule("font-family: monospace, serif");
    tea.rule("_font-family: 'courier new', monospace");
    tea.rule("font-size: 1em");
});

/*
 * Improves readability of pre-formatted text in all browsers
 */

tea.rule("pre",function(){
    tea.rule("white-space: pre");
    tea.rule("white-space: pre-wrap");
    tea.rule("word-wrap: break-word");
});

/*
 * 1. Addresses CSS quotes not supported in IE6/7
 * 2. Addresses quote property not supported in S4
 */

/* 1 */

tea.rule("q",function(){
    tea.rule("quotes: none");
});

/* 2 */

tea.rule("q:before,\n"+
"q:after",function(){
    tea.rule("content: ''");
    tea.rule("content: none");
});

tea.rule("small",function(){
    tea.rule("font-size: 75%");
});

/*
 * Prevents sub and sup affecting line-height in all browsers
 * gist.github.com/413930
 */

tea.rule("sub,\n"+
"sup",function(){
    tea.rule("font-size: 75%");
    tea.rule("line-height: 0");
    tea.rule("position: relative");
    tea.rule("vertical-align: baseline");
});

tea.rule("sup",function(){
    tea.rule("top: -0.5em");
});

tea.rule("sub",function(){
    tea.rule("bottom: -0.25em");
});


/* =============================================================================
   Lists
   ========================================================================== */

tea.rule("ul,\n"+
"ol",function(){
    tea.rule("margin: 1em 0");
    tea.rule("padding: 0 0 0 40px");
});

tea.rule("dd",function(){
    tea.rule("margin: 0 0 0 40px");
});

tea.rule("nav ul,\n"+
"nav ol",function(){
    tea.rule("list-style: none");
    tea.rule("list-style-image: none");
});


/* =============================================================================
   Embedded content
   ========================================================================== */

/*
 * 1. Removes border when inside 'a' element in IE6/7/8/9
 * 2. Improves image quality when scaled in IE7
 *    code.flickr.com/blog/2008/11/12/on-ui-quality-the-little-things-client-side-image-resizing/
 */

tea.rule("img",function(){
    tea.rule("border: 0"); /* 1 */
    tea.rule("-ms-interpolation-mode: bicubic"); /* 2 */
});


/* =============================================================================
   Figures
   ========================================================================== */

/*
 * Addresses margin not present in IE6/7/8/9, S5, O11
 */

tea.rule("figure",function(){
    tea.rule("margin: 0");
});


/* =============================================================================
   Forms
   ========================================================================== */

/*
 * Corrects margin displayed oddly in IE6/7
 */

tea.rule("form",function(){
    tea.rule("margin: 0");
});

/*
 * Define consistent margin and padding
 */

tea.rule("fieldset",function(){
    tea.rule("margin: 0 2px");
    tea.rule("padding: 0.35em 0.625em 0.75em");
});

/*
 * 1. Corrects color not being inherited in IE6/7/8/9
 * 2. Corrects alignment displayed oddly in IE6/7
 */

tea.rule("legend",function(){
    tea.rule("border: 0"); /* 1 */
    tea.rule("*margin-left: -7px"); /* 2 */
});

/*
 * 1. Corrects font size not being inherited in all browsers
 * 2. Addresses margins set differently in IE6/7, F3/4, S5, Chrome
 * 3. Improves appearance and consistency in all browsers
 */

tea.rule("button,\n"+
"input,\n"+
"select,\n"+
"textarea",function(){
    tea.rule("font-size: 100%"); /* 1 */
    tea.rule("margin: 0"); /* 2 */
    tea.rule("vertical-align: baseline"); /* 3 */
    tea.rule("*vertical-align: middle"); /* 3 */
});

/*
 * 1. Addresses FF3/4 setting line-height using !important in the UA stylesheet
 * 2. Corrects inner spacing displayed oddly in IE6/7
 */

tea.rule("button,\n"+
"input",function(){
    tea.rule("line-height: normal"); /* 1 */
    tea.rule("*overflow: visible");  /* 2 */
});

/*
 * Corrects overlap and whitespace issue for buttons and inputs in IE6/7
 * Known issue: reintroduces inner spacing
 */

tea.rule("table button,\n"+
"table input",function(){
    tea.rule("*overflow: auto");
});

/*
 * 1. Improves usability and consistency of cursor style between image-type 'input' and others
 * 2. Corrects inability to style clickable 'input' types in iOS
 */

tea.rule("button,\n"+
"html input[type=\"button\"],\n"+
"input[type=\"reset\"],\n"+
"input[type=\"submit\"]",function(){
    tea.rule("cursor: pointer"); /* 1 */
    tea.rule("-webkit-appearance: button"); /* 2 */
});

/*
 * 1. Addresses box sizing set to content-box in IE8/9
 * 2. Addresses excess padding in IE8/9
 */

tea.rule("input[type=\"checkbox\"],\n"+
"input[type=\"radio\"]",function(){
    tea.rule("box-sizing: border-box"); /* 1 */
    tea.rule("padding: 0"); /* 2 */
});

/*
 * 1. Addresses appearance set to searchfield in S5, Chrome
 * 2. Addresses box sizing set to border-box in S5, Chrome (include -moz to future-proof)
 */

tea.rule("input[type=\"search\"]",function(){
    tea.rule("-webkit-appearance: textfield"); /* 1 */
    tea.rule("-moz-box-sizing: content-box");
    tea.rule("-webkit-box-sizing: content-box"); /* 2 */
    tea.rule("box-sizing: content-box");
});

/*
 * Corrects inner padding displayed oddly in S5, Chrome on OSX
 */

tea.rule("input[type=\"search\"]::-webkit-search-decoration",function(){
    tea.rule("-webkit-appearance: none");
});

/*
 * Corrects inner padding and border displayed oddly in FF3/4
 * www.sitepen.com/blog/2008/05/14/the-devils-in-the-details-fixing-dojos-toolbar-buttons/
 */

tea.rule("button::-moz-focus-inner,\n"+
"input::-moz-focus-inner",function(){
    tea.rule("border: 0");
    tea.rule("padding: 0");
});

/*
 * 1. Removes default vertical scrollbar in IE6/7/8/9
 * 2. Improves readability and alignment in all browsers
 */

tea.rule("textarea",function(){
    tea.rule("overflow: auto"); /* 1 */
    tea.rule("vertical-align: top"); /* 2 */
});


/* =============================================================================
   Tables
   ========================================================================== */

/*
 * Remove most spacing between table cells
 */

tea.rule("table",function(){
    tea.rule("border-collapse: collapse");
    tea.rule("border-spacing: 0");
});

}
}})//@ sourceURL=../tools/donut/normalize/normalize.tea
};
teacss.parsed["../tools/donut/reset/reset.tea"] = {func:(function(){with (teacss.functions){
reset = function () {
    tea.rule("html, body, div, span, applet, object, iframe,\n"+
    "h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n"+
    "a, abbr, acronym, address, big, cite, code,\n"+
    "del, dfn, em, img, ins, kbd, q, s, samp,\n"+
    "small, strike, strong, sub, sup, tt, var,\n"+
    "b, u, i, center,\n"+
    "dl, dt, dd, ol, ul, li,\n"+
    "fieldset, form, label, legend,\n"+
    "table, caption, tbody, tfoot, thead, tr, th, td,\n"+
    "article, aside, canvas, details, embed,\n"+
    "figure, figcaption, footer, header, hgroup,\n"+
    "menu, nav, output, ruby, section, summary,\n"+
    "time, mark, audio, video",function(){
        tea.rule("margin: 0");
        tea.rule("padding: 0");
        tea.rule("border: 0");
        tea.rule("font-size: 100%");
        tea.rule("vertical-align: baseline");
    });
    tea.rule("body",function(){
        tea.rule("line-height: 1");
    });
    tea.rule("ol, ul",function(){
        tea.rule("list-style: none");
    });
    tea.rule("table",function(){
        tea.rule("border-collapse: collapse");
        tea.rule("border-spacing: 0");
    });
    tea.rule("caption, th, td",function(){
        tea.rule("text-align: left");
        tea.rule("font-weight: normal");
        tea.rule("vertical-align: middle");
    });
    tea.rule("q, blockquote",function(){
        tea.rule("quotes: none");
        tea.rule("&:before, &:after",function(){
            tea.rule("content: \"\"");
            tea.rule("content: none");
        });
    });
    tea.rule("a img",function(){
        tea.rule("border: none");
    });
    tea.rule("article, aside, details, figcaption, figure,\n"+
    "footer, header, hgroup, menu, nav, section",function(){
        tea.rule("display: block");
    });
}
}})//@ sourceURL=../tools/donut/reset/reset.tea
};
teacss.parsed["../tools/donut/grid/grid.tea"] = {func:(function(){with (teacss.functions){
{
    grid = function(columns,columnWidth,gutterWidth) {
        grid.columnCount = columns;
        grid.columnWidth = columnWidth;
        grid.gutterWidth = gutterWidth;
    }
    grid.columnCount = 16
    grid.columnWidth = 40
    grid.gutterWidth = 20
}

container = function (width) {
    width = width || '900px';
    tea.rule("width: "+(width));
    tea.rule("margin: 0 auto");
    clearfix.call(this);
}

grid.container = function () {
    siteWidth = (grid.columnCount * grid.columnWidth) + (grid.gutterWidth * (grid.columnCount-1))
    container.call(this, siteWidth+'px');
}

grid.columns = function (columnSpan) {
    tea.rule("display: inline");
    tea.rule("float: left");
    tea.rule("width: "+((grid.columnWidth * columnSpan) + (grid.gutterWidth * (columnSpan - 1)))+"px");
    tea.rule("margin-left: "+(grid.gutterWidth)+"px");

    tea.rule("&:first-child",function(){
        tea.rule("margin-left: 0");
    });
}

grid.prepend = function (columnOffset) {
    tea.rule("margin-left:  "+((grid.columnWidth * columnOffset) + (grid.gutterWidth * (columnOffset - 1)))+"px !important");
}

grid.append = function (columnOffset) {
    tea.rule("margin-right: "+((grid.columnWidth * columnOffset) + (grid.gutterWidth * (columnOffset - 1)))+"px !important");
}
}})//@ sourceURL=../tools/donut/grid/grid.tea
};
teacss.parsed["../tools/donut/typography/typography.tea"] = {func:(function(){with (teacss.functions){
/* @import "font" */ tea.import("../tools/donut/typography/font.tea");
/* @import "hero-unit" */ tea.import("../tools/donut/typography/hero-unit.tea");
/* @import "tables" */ tea.import("../tools/donut/typography/tables.tea");
/* @import "sprites" */ tea.import("../tools/donut/typography/sprites.tea");

typography = function () {
    tea.rule("body",function(){
        tea.rule("margin: 0");
        tea.rule("font-family: "+(baseFontFamily));
        tea.rule("font-size: "+(baseFontSize));
        tea.rule("line-height: "+(baseLineHeight));
        tea.rule("color: "+(textColor));
        tea.rule("background-color: "+(white));
    });

    tea.rule("a",function(){
        tea.rule("color: "+(linkColor));
        tea.rule("text-decoration: none");
    });
    tea.rule("a:hover",function(){
        tea.rule("color: "+(linkColorHover));
        tea.rule("text-decoration: underline");
    });

    tea.rule("p",function(){
        tea.rule("margin: 0 0 "+(parseFloat(baseLineHeight) / 2)+"px");
        tea.rule("font-family: "+(baseFontFamily));
        tea.rule("font-size: "+(baseFontSize));
        tea.rule("line-height: "+(baseLineHeight));
        tea.rule("small",function(){
            tea.rule("font-size: "+(parseFloat(baseFontSize) - 2)+"px");
            tea.rule("color: "+(grayLight));
        });
    });
    tea.rule(".lead",function(){
        tea.rule("margin-bottom: "+(baseLineHeight));
        tea.rule("font-size: 20px");
        tea.rule("font-weight: 200");
        tea.rule("line-height: "+(parseFloat(baseLineHeight) * 1.5)+"px");
    });

    // HEADINGS
    // --------

    tea.rule("h1, h2, h3, h4, h5, h6",function(){
        tea.rule("margin: 0");
        tea.rule("font-weight: bold");
        tea.rule("color: "+(grayDark));
        tea.rule("text-rendering: optimizelegibility"); // Fix the character spacing for headings
        tea.rule("small",function(){
            tea.rule("font-weight: normal");
            tea.rule("color: "+(grayLight));
        });
    });
    tea.rule("h1",function(){
        tea.rule("font-size: 30px");
        tea.rule("line-height: "+(parseFloat(baseLineHeight) * 2)+"px");
        tea.rule("small",function(){
            tea.rule("font-size: 18px");
        });
    });
    tea.rule("h2",function(){
        tea.rule("font-size: 24px");
        tea.rule("line-height: "+(parseFloat(baseLineHeight) * 2)+"px");
        tea.rule("small",function(){
            tea.rule("font-size: 18px");
        });
    });
    tea.rule("h3",function(){
        tea.rule("line-height: "+(parseFloat(baseLineHeight) * 1.5)+"px");
        tea.rule("font-size: 18px");
        tea.rule("small",function(){
            tea.rule("font-size: 14px");
        });
    });
    tea.rule("h4, h5, h6",function(){
        tea.rule("line-height: "+(baseLineHeight));
    });
    tea.rule("h4",function(){
        tea.rule("font-size: 14px");
        tea.rule("small",function(){
            tea.rule("font-size: 12px");
        });
    });
    tea.rule("h5",function(){
        tea.rule("font-size: 12px");
    });
    tea.rule("h6",function(){
        tea.rule("font-size: 11px");
        tea.rule("color: "+(grayLight));
        tea.rule("text-transform: uppercase");
    });

    // Page header
    tea.rule(".page-header",function(){
        tea.rule("padding-bottom: "+(parseFloat(baseLineHeight) - 1)+"px");
        tea.rule("margin: "+(baseLineHeight)+" 0");
        tea.rule("border-bottom: 1px solid "+(grayLighter));
    });
    tea.rule(".page-header h1",function(){
        tea.rule("line-height: 1");
    });



    // LISTS
    // -----

    // Unordered and Ordered lists
    tea.rule("ul, ol",function(){
        tea.rule("padding: 0");
        tea.rule("margin: 0 0 "+(parseFloat(baseLineHeight) / 2)+"px 25px");
    });
    tea.rule("ul ul,\n"+
    "ul ol,\n"+
    "ol ol,\n"+
    "ol ul",function(){
        tea.rule("margin-bottom: 0");
    });
    tea.rule("ul",function(){
        tea.rule("list-style: disc");
    });
    tea.rule("ol",function(){
        tea.rule("list-style: decimal");
    });
    tea.rule("li",function(){
        tea.rule("line-height: "+(baseLineHeight));
    });
    tea.rule("ul.unstyled",function(){
        tea.rule("margin-left: 0");
        tea.rule("list-style: none");
    });

    // Description Lists
    tea.rule("dl",function(){
        tea.rule("margin-bottom: "+(baseLineHeight));
    });
    tea.rule("dt,\n"+
    "dd",function(){
        tea.rule("line-height: "+(baseLineHeight));
    });
    tea.rule("dt",function(){
        tea.rule("font-weight: bold");
    });
    tea.rule("dd",function(){
        tea.rule("margin-left: "+(parseFloat(baseLineHeight) / 2)+"px");
    });

    // MISC
    // ----

    // Horizontal rules
    tea.rule("hr",function(){
        tea.rule("margin: "+(baseLineHeight)+" 0");
        tea.rule("border: 0");
        tea.rule("border-top: 1px solid #e5e5e5");
        tea.rule("border-bottom: 1px solid "+(white));
    });

    // Emphasis
    tea.rule("strong",function(){
        tea.rule("font-weight: bold");
    });
    tea.rule("em",function(){
        tea.rule("font-style: italic");
    });
    tea.rule(".muted",function(){
        tea.rule("color: "+(grayLight));
    });

    // Abbreviations and acronyms
    tea.rule("abbr",function(){
        tea.rule("font-size: 90%");
        tea.rule("text-transform: uppercase");
        tea.rule("border-bottom: 1px dotted #ddd");
        tea.rule("cursor: help");
    });

    // Blockquotes
    tea.rule("blockquote",function(){
        tea.rule("padding: 0 0 0 15px");
        tea.rule("margin: 0 0 "+(baseLineHeight));
        tea.rule("border-left: 5px solid "+(grayLighter));
        tea.rule("p",function(){
            tea.rule("margin-bottom: 0");
            font.shorthand.call(this, '16px',300,(parseFloat(baseLineHeight) * 1.25)+'px');
        });
        tea.rule("small",function(){
            tea.rule("display: block");
            tea.rule("line-height: "+(baseLineHeight));
            tea.rule("color: "+(grayLight));
            tea.rule("&:before",function(){
                tea.rule("content: '\\2014 \\00A0'");
            });
        });

        // Float right with text-align: right
        tea.rule("&.pull-right",function(){
            tea.rule("float: right");
            tea.rule("padding-left: 0");
            tea.rule("padding-right: 15px");
            tea.rule("border-left: 0");
            tea.rule("border-right: 5px solid "+(grayLighter));
            tea.rule("p,\n"+
            "small",function(){
                tea.rule("text-align: right");
            });
        });
    });

    // Quotes
    tea.rule("q:before,\n"+
    "q:after,\n"+
    "blockquote:before,\n"+
    "blockquote:after",function(){
        tea.rule("content: \"\"");
    });

    // Addresses
    tea.rule("address",function(){
        tea.rule("display: block");
        tea.rule("margin-bottom: "+(baseLineHeight));
        tea.rule("line-height: "+(baseLineHeight));
        tea.rule("font-style: normal");
    });

    // Misc
    tea.rule("small",function(){
        tea.rule("font-size: 100%");
    });
    tea.rule("cite",function(){
        tea.rule("font-style: normal");
    });
}
}})//@ sourceURL=../tools/donut/typography/typography.tea
};
teacss.parsed["../tools/donut/typography/font.tea"] = {func:(function(){with (teacss.functions){
font = {family:{}};
font.family.serif = function () {
    tea.rule("font-family: Georgia, \"Times New Roman\", Times, serif");
}
font.family.sans_serif = function () {
    tea.rule("font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif");
}
font.family.monospace = function () {
    tea.rule("font-family: Menlo, Monaco, \"Courier New\", monospace");
}

font.shorthand = function (size,weight,lineHeight) {
    size = size || baseFontSize; weight = weight || 'normal'; lineHeight = lineHeight || baseLineHeight;
    tea.rule("font-size: "+(size));
    tea.rule("font-weight: "+(weight));
    tea.rule("line-height: "+(lineHeight));
}
font.serif = function (size, weight, lineHeight) {
    font.family.serif.call(this);
    font.shorthand.call(this, size, weight, lineHeight);
}
font.sans_serif = function (size, weight, lineHeight) {
    font.family.sans_serif.call(this);
    font.shorthand.call(this, size, weight, lineHeight);
}
font.monospace = function (size, weight, lineHeight) {
    font.family.monospace.call(this);
    font.shorthand.call(this, size, weight,lineHeight);
}

}})//@ sourceURL=../tools/donut/typography/font.tea
};
teacss.parsed["../tools/donut/typography/hero-unit.tea"] = {func:(function(){with (teacss.functions){
// HERO UNIT
// ---------

hero_unit = function () {
    tea.rule("padding: 60px");
    tea.rule("margin-bottom: 30px");
    tea.rule("background-color: #f5f5f5");
    border_radius.call(this, '6px');
    tea.rule("h1",function(){
        tea.rule("margin-bottom: 0");
        tea.rule("font-size: 60px");
        tea.rule("line-height: 1");
        tea.rule("letter-spacing: -1px");
    });
    tea.rule("p",function(){
        tea.rule("font-size: 18px");
        tea.rule("font-weight: 200");
        tea.rule("line-height: "+(parseFloat(baseLineHeight) * 1.5)+"px");
    });
}

}})//@ sourceURL=../tools/donut/typography/hero-unit.tea
};
teacss.parsed["../tools/donut/typography/tables.tea"] = {func:(function(){with (teacss.functions){
//
// Tables.less
// Tables for, you guessed it, tabular data
// ----------------------------------------


// BASE TABLES
// -----------------

table = {};

table.generate = function () {
    tea.rule("table",function(){
        table.base.call(this);
        table.cellSizing.call(this);
    });
    tea.rule(".table",function(){
        table.table.call(this);
    });

    tea.rule(".table-condensed",function(){
        table.condensed.call(this);
    });
    tea.rule(".table-bordered",function(){
        table.bordered.call(this);
    });
    tea.rule(".table-striped",function(){
        table.striped.call(this);
    });
}


table.base = function () {
    tea.rule("max-width: 100%");
    tea.rule("border-collapse: collapse");
    tea.rule("border-spacing: 0");
}

table.cellSizing = function () {
    // TABLE CELL SIZING
    // -----------------
    // Change the columns
    tableColumns = function (columnSpan) {
        columnSpan = columnSpan || 1;
        tea.rule("float: none");
        tea.rule("width: "+(((gridColumnWidth) * columnSpan) + (gridGutterWidth * (columnSpan - 1)) - 16)+"px");
        tea.rule("margin-left: 0");
    }

    tea.rule(".span1",function(){ tableColumns.call(this, 1); });
    tea.rule(".span2",function(){ tableColumns.call(this, 2); });
    tea.rule(".span3",function(){ tableColumns.call(this, 3); });
    tea.rule(".span4",function(){ tableColumns.call(this, 4); });
    tea.rule(".span5",function(){ tableColumns.call(this, 5); });
    tea.rule(".span6",function(){ tableColumns.call(this, 6); });
    tea.rule(".span7",function(){ tableColumns.call(this, 7); });
    tea.rule(".span8",function(){ tableColumns.call(this, 8); });
    tea.rule(".span9",function(){ tableColumns.call(this, 9); });
    tea.rule(".span10",function(){ tableColumns.call(this, 10); });
    tea.rule(".span11",function(){ tableColumns.call(this, 11); });
    tea.rule(".span12",function(){ tableColumns.call(this, 12); });
}

// BASELINE STYLES
// ---------------

table.table = function () {
    table.base.call(this);

    tea.rule("width: 100%");
    tea.rule("margin-bottom: "+(baseLineHeight));
    // Cells
    tea.rule("th,\n"+
    "td",function(){
        tea.rule("padding: 8px");
        tea.rule("line-height: "+(baseLineHeight));
        tea.rule("text-align: left");
        tea.rule("border-top: 1px solid #ddd");
    });
    tea.rule("th",function(){
        tea.rule("font-weight: bold");
        tea.rule("vertical-align: bottom");
    });
    tea.rule("td",function(){
        tea.rule("vertical-align: top");
    });
    // Remove top border from thead by default
    tea.rule("thead:first-child tr th,\n"+
    "thead:first-child tr td",function(){
        tea.rule("border-top: 0");
    });
    // Account for multiple tbody instances
    tea.rule("tbody + tbody",function(){
        tea.rule("border-top: 2px solid #ddd");
    });
}



// CONDENSED TABLE W/ HALF PADDING
// -------------------------------

table.condensed = function () {
    tea.rule("th,\n"+
    "td",function(){
        tea.rule("padding: 4px 5px");
    });
}


// BORDERED VERSION
// ----------------

table.bordered = function () {
    tea.rule("border: 1px solid #ddd");
    tea.rule("border-collapse: separate"); // Done so we can round those corners!
    tea.rule("*border-collapse: collapsed"); // IE7 can't round corners anyway
    border_radius.call(this, '4px');
    tea.rule("th + th,\n"+
    "td + td,\n"+
    "th + td,\n"+
    "td + th",function(){
        tea.rule("border-left: 1px solid #ddd");
    });
    // Prevent a double border
    tea.rule("thead:first-child tr:first-child th,\n"+
    "tbody:first-child tr:first-child th,\n"+
    "tbody:first-child tr:first-child td",function(){
        tea.rule("border-top: 0");
    });
    // For first th or td in the first row in the first thead or tbody
    tea.rule("thead:first-child tr:first-child th:first-child,\n"+
    "tbody:first-child tr:first-child td:first-child",function(){
        border_radius.call(this, '4px 0 0 0');
    });
    tea.rule("thead:first-child tr:first-child th:last-child,\n"+
    "tbody:first-child tr:first-child td:last-child",function(){
        border_radius.call(this, '0 4px 0 0');
    });
    // For first th or td in the first row in the first thead or tbody
    tea.rule("thead:last-child tr:last-child th:first-child,\n"+
    "tbody:last-child tr:last-child td:first-child",function(){
        border_radius.call(this, '0 0 0 4px');
    });
    tea.rule("thead:last-child tr:last-child th:last-child,\n"+
    "tbody:last-child tr:last-child td:last-child",function(){
        border_radius.call(this, '0 0 4px 0');
    });
}


// ZEBRA-STRIPING
// --------------

// Default zebra-stripe styles (alternating gray and transparent backgrounds)
table.striped = function () {
    tea.rule("tbody",function(){
        tea.rule("tr:nth-child(odd) td,\n"+
        "tr:nth-child(odd) th",function(){
            tea.rule("background-color: #f9f9f9");
        });
    });
}
}})//@ sourceURL=../tools/donut/typography/tables.tea
};
teacss.parsed["../tools/donut/typography/sprites.tea"] = {func:(function(){with (teacss.functions){
icon = function (type,white) {
    tea.rule("display: inline-block");
    tea.rule("width: 14px");
    tea.rule("height: 14px");
    tea.rule("vertical-align: text-top");

    if (white)
        tea.rule("background-image: url("+(imagesDir)+"glyphicons-halflings-white.png)");
    else
        tea.rule("background-image: url("+(imagesDir)+"glyphicons-halflings.png)");
    
    tea.rule("background-position: 14px 14px");
    tea.rule("background-repeat: no-repeat");
    
    ie7_restore_right_whitespace.call(this);

    {
        switch (type) {
            case "glass"              :{ tea.rule("background-position: 0      0"); }; break;
            case "music"              :{ tea.rule("background-position: -24px  0"); }; break;
            case "search"             :{ tea.rule("background-position: -48px  0"); }; break;
            case "envelope"           :{ tea.rule("background-position: -72px  0"); }; break;
            case "heart"              :{ tea.rule("background-position: -96px  0"); }; break;
            case "star"               :{ tea.rule("background-position: -120px 0"); }; break;
            case "star-empty"         :{ tea.rule("background-position: -144px 0"); }; break;
            case "user"               :{ tea.rule("background-position: -168px 0"); }; break;
            case "film"               :{ tea.rule("background-position: -192px 0"); }; break;
            case "th-large"           :{ tea.rule("background-position: -216px 0"); }; break;
            case "th"                 :{ tea.rule("background-position: -240px 0"); }; break;
            case "th-list"            :{ tea.rule("background-position: -264px 0"); }; break;
            case "ok"                 :{ tea.rule("background-position: -288px 0"); }; break;
            case "remove"             :{ tea.rule("background-position: -312px 0"); }; break;
            case "zoom-in"            :{ tea.rule("background-position: -336px 0"); }; break;
            case "zoom-out"           :{ tea.rule("background-position: -360px 0"); }; break;
            case "off"                :{ tea.rule("background-position: -384px 0"); }; break;
            case "signal"             :{ tea.rule("background-position: -408px 0"); }; break;
            case "cog"                :{ tea.rule("background-position: -432px 0"); }; break;
            case "trash"              :{ tea.rule("background-position: -456px 0"); }; break;
                        
            case "home"               :{ tea.rule("background-position: 0      -24px"); }; break;
            case "file"               :{ tea.rule("background-position: -24px  -24px"); }; break;
            case "time"               :{ tea.rule("background-position: -48px  -24px"); }; break;
            case "road"               :{ tea.rule("background-position: -72px  -24px"); }; break;
            case "download-alt"       :{ tea.rule("background-position: -96px  -24px"); }; break;
            case "download"           :{ tea.rule("background-position: -120px -24px"); }; break;
            case "upload"             :{ tea.rule("background-position: -144px -24px"); }; break;
            case "inbox"              :{ tea.rule("background-position: -168px -24px"); }; break;
            case "play-circle"        :{ tea.rule("background-position: -192px -24px"); }; break;
            case "repeat"             :{ tea.rule("background-position: -216px -24px"); }; break;
            case "refresh"            :{ tea.rule("background-position: -240px -24px"); }; break;
            case "list-alt"           :{ tea.rule("background-position: -264px -24px"); }; break;
            case "lock"               :{ tea.rule("background-position: -287px -24px"); }; break; // 1px off
            case "flag"               :{ tea.rule("background-position: -312px -24px"); }; break;
            case "headphones"         :{ tea.rule("background-position: -336px -24px"); }; break;
            case "volume-off"         :{ tea.rule("background-position: -360px -24px"); }; break;
            case "volume-down"        :{ tea.rule("background-position: -384px -24px"); }; break;
            case "volume-up"          :{ tea.rule("background-position: -408px -24px"); }; break;
            case "qrcode"             :{ tea.rule("background-position: -432px -24px"); }; break;
            case "barcode"            :{ tea.rule("background-position: -456px -24px"); }; break;
                        
            case "tag"                :{ tea.rule("background-position: 0      -48px"); }; break;
            case "tags"               :{ tea.rule("background-position: -25px  -48px"); }; break; // 1px off
            case "book"               :{ tea.rule("background-position: -48px  -48px"); }; break;
            case "bookmark"           :{ tea.rule("background-position: -72px  -48px"); }; break;
            case "print"              :{ tea.rule("background-position: -96px  -48px"); }; break;
            case "camera"             :{ tea.rule("background-position: -120px -48px"); }; break;
            case "font"               :{ tea.rule("background-position: -144px -48px"); }; break;
            case "bold"               :{ tea.rule("background-position: -167px -48px"); }; break; // 1px off
            case "italic"             :{ tea.rule("background-position: -192px -48px"); }; break;
            case "text-height"        :{ tea.rule("background-position: -216px -48px"); }; break;
            case "text-width"         :{ tea.rule("background-position: -240px -48px"); }; break;
            case "align-left"         :{ tea.rule("background-position: -264px -48px"); }; break;
            case "align-center"       :{ tea.rule("background-position: -288px -48px"); }; break;
            case "align-right"        :{ tea.rule("background-position: -312px -48px"); }; break;
            case "align-justify"      :{ tea.rule("background-position: -336px -48px"); }; break;
            case "list"               :{ tea.rule("background-position: -360px -48px"); }; break;
            case "indent-left"        :{ tea.rule("background-position: -384px -48px"); }; break;
            case "indent-right"       :{ tea.rule("background-position: -408px -48px"); }; break;
            case "facetime-video"     :{ tea.rule("background-position: -432px -48px"); }; break;
            case "picture"            :{ tea.rule("background-position: -456px -48px"); }; break;
                        
            case "pencil"             :{ tea.rule("background-position: 0      -72px"); }; break;
            case "map-marker"         :{ tea.rule("background-position: -24px  -72px"); }; break;
            case "adjust"             :{ tea.rule("background-position: -48px  -72px"); }; break;
            case "tint"               :{ tea.rule("background-position: -72px  -72px"); }; break;
            case "edit"               :{ tea.rule("background-position: -96px  -72px"); }; break;
            case "share"              :{ tea.rule("background-position: -120px -72px"); }; break;
            case "check"              :{ tea.rule("background-position: -144px -72px"); }; break;
            case "move"               :{ tea.rule("background-position: -168px -72px"); }; break;
            case "step-backward"      :{ tea.rule("background-position: -192px -72px"); }; break;
            case "fast-backward"      :{ tea.rule("background-position: -216px -72px"); }; break;
            case "backward"           :{ tea.rule("background-position: -240px -72px"); }; break;
            case "play"               :{ tea.rule("background-position: -264px -72px"); }; break;
            case "pause"              :{ tea.rule("background-position: -288px -72px"); }; break;
            case "stop"               :{ tea.rule("background-position: -312px -72px"); }; break;
            case "forward"            :{ tea.rule("background-position: -336px -72px"); }; break;
            case "fast-forward"       :{ tea.rule("background-position: -360px -72px"); }; break;
            case "step-forward"       :{ tea.rule("background-position: -384px -72px"); }; break;
            case "eject"              :{ tea.rule("background-position: -408px -72px"); }; break;
            case "chevron-left"       :{ tea.rule("background-position: -432px -72px"); }; break;
            case "chevron-right"      :{ tea.rule("background-position: -456px -72px"); }; break;
                        
            case "plus-sign"          :{ tea.rule("background-position: 0      -96px"); }; break;
            case "minus-sign"         :{ tea.rule("background-position: -24px  -96px"); }; break;
            case "remove-sign"        :{ tea.rule("background-position: -48px  -96px"); }; break;
            case "ok-sign"            :{ tea.rule("background-position: -72px  -96px"); }; break;
            case "question-sign"      :{ tea.rule("background-position: -96px  -96px"); }; break;
            case "info-sign"          :{ tea.rule("background-position: -120px -96px"); }; break;
            case "screenshot"         :{ tea.rule("background-position: -144px -96px"); }; break;
            case "remove-circle"      :{ tea.rule("background-position: -168px -96px"); }; break;
            case "ok-circle"          :{ tea.rule("background-position: -192px -96px"); }; break;
            case "ban-circle"         :{ tea.rule("background-position: -216px -96px"); }; break;
            case "arrow-left"         :{ tea.rule("background-position: -240px -96px"); }; break;
            case "arrow-right"        :{ tea.rule("background-position: -264px -96px"); }; break;
            case "arrow-up"           :{ tea.rule("background-position: -289px -96px"); }; break; // 1px off
            case "arrow-down"         :{ tea.rule("background-position: -312px -96px"); }; break;
            case "share-alt"          :{ tea.rule("background-position: -336px -96px"); }; break;
            case "resize-full"        :{ tea.rule("background-position: -360px -96px"); }; break;
            case "resize-small"       :{ tea.rule("background-position: -384px -96px"); }; break;
            case "plus"               :{ tea.rule("background-position: -408px -96px"); }; break;
            case "minus"              :{ tea.rule("background-position: -433px -96px"); }; break;
            case "asterisk"           :{ tea.rule("background-position: -456px -96px"); }; break;
                        
            case "exclamation-sign"   :{ tea.rule("background-position: 0      -120px"); }; break;
            case "gift"               :{ tea.rule("background-position: -24px  -120px"); }; break;
            case "leaf"               :{ tea.rule("background-position: -48px  -120px"); }; break;
            case "fire"               :{ tea.rule("background-position: -72px  -120px"); }; break;
            case "eye-open"           :{ tea.rule("background-position: -96px  -120px"); }; break;
            case "eye-close"          :{ tea.rule("background-position: -120px -120px"); }; break;
            case "warning-sign"       :{ tea.rule("background-position: -144px -120px"); }; break;
            case "plane"              :{ tea.rule("background-position: -168px -120px"); }; break;
            case "calendar"           :{ tea.rule("background-position: -192px -120px"); }; break;
            case "random"             :{ tea.rule("background-position: -216px -120px"); }; break;
            case "comment"            :{ tea.rule("background-position: -240px -120px"); }; break;
            case "magnet"             :{ tea.rule("background-position: -264px -120px"); }; break;
            case "chevron-up"         :{ tea.rule("background-position: -288px -120px"); }; break;
            case "chevron-down"       :{ tea.rule("background-position: -313px -119px"); }; break; // 1px off
            case "retweet"            :{ tea.rule("background-position: -336px -120px"); }; break;
            case "shopping-cart"      :{ tea.rule("background-position: -360px -120px"); }; break;
            case "folder-close"       :{ tea.rule("background-position: -384px -120px"); }; break;
            case "folder-open"        :{ tea.rule("background-position: -408px -120px"); }; break;
            case "resize-vertical"    :{ tea.rule("background-position: -432px -119px"); }; break;
            case "resize-horizontal"  :{ tea.rule("background-position: -456px -118px"); }; break;                     
        }
    }
}



}})//@ sourceURL=../tools/donut/typography/sprites.tea
};
teacss.parsed["../tools/donut/form/button.tea"] = {func:(function(){with (teacss.functions){
buttonBackground = function (startColor, endColor) {
    // gradientBar will set the background to a pleasing blend of these, to support IE<=9
    gradient.bar.call(this, startColor, endColor);
    reset_filter.call(this);

    // in these cases the gradient won't cover the background, so we override
    tea.rule("&:hover, &:active, &.active, &.disabled, &[disabled]",function(){
        tea.rule("background-color: "+(endColor));
    });

    // IE 7 + 8 can't handle box-shadow to show active, so we darken a bit ourselves
    tea.rule("&:active,\n"+
    "&.active",function(){
        tea.rule("background-color: "+(darken(endColor, 10))+" e(\"\\9\")");
    });
}

// Large
buttonLarge = function () {
    tea.rule("padding: 9px 14px");
    tea.rule("font-size: "+(parseFloat(baseFontSize)+2)+"px");
    tea.rule("line-height: normal");
    border_radius.call(this, '5px');
    tea.rule(".icon",function(){
        tea.rule("margin-top: 1px");
    });
}

// Small
buttonSmall = function () {
    tea.rule("padding: 5px 9px");
    tea.rule("font-size: "+(parseFloat(baseFontSize) - 2)+"px");
    tea.rule("line-height: "+(parseFloat(baseLineHeight) - 2)+"px");
    tea.rule(".icon",function(){
        tea.rule("margin-top: -1px");
    });
}


buttonPrimary = function () {
    buttonBackground.call(this, primaryButtonBackground, spin(primaryButtonBackground, 20));
    tea.rule("text-shadow: 0 -1px 0 rgba(0,0,0,.25)");
    tea.rule("color: "+(white));
}
// Warning appears are orange
buttonWarning = function () {
    buttonBackground.call(this, lighten(orange, 15), orange);
    tea.rule("text-shadow: 0 -1px 0 rgba(0,0,0,.25)");
    tea.rule("color: "+(white));
}
// Danger and error appear as red
buttonDanger = function () {
    buttonBackground.call(this, '#ee5f5b', '#bd362f');
    tea.rule("text-shadow: 0 -1px 0 rgba(0,0,0,.25)");
    tea.rule("color: "+(white));
}
// Success appears as green
buttonSuccess = function () {
    buttonBackground.call(this, '#62c462', '#51a351');
    tea.rule("text-shadow: 0 -1px 0 rgba(0,0,0,.25)");
    tea.rule("color: "+(white));
}
// Info appears as a neutral blue
buttonInfo = function () {
    buttonBackground.call(this, '#5bc0de', '#2f96b4');
    tea.rule("text-shadow: 0 -1px 0 rgba(0,0,0,.25)");
    tea.rule("color: "+(white));
}

button = function () {
    tea.rule("display: inline-block");
    tea.rule("padding: 4px 10px 4px");
    tea.rule("font-size: "+(baseFontSize));
    tea.rule("line-height: "+(baseLineHeight));
    tea.rule("color: "+(grayDark));
    tea.rule("text-align: center");
    tea.rule("text-shadow: 0 1px 1px rgba(255,255,255,.75)");
    gradient.vertical_three_colors.call(this, white, white, '25%', darken(white, 10)); // Don't use .gradientbar() here since it does a three-color gradient
    tea.rule("border: 1px solid #ccc");
    tea.rule("border-bottom-color: #bbb");
    border_radius.call(this, '4px');
    box_shadow.call(this, 'inset 0 1px 0 rgba(255,255,255,.2), 0 1px 2px rgba(0,0,0,.05)');
    tea.rule("cursor: pointer");

    // Give IE7 some love
    //.ie7_restore_left_whitespace();

    // Hover state
    tea.rule("&:hover",function(){
        tea.rule("color: "+(grayDark));
        tea.rule("text-decoration: none");
        tea.rule("background-color: "+(darken(white, 10)));
        tea.rule("background-position: 0 -15px");

        // transition is only when going to hover, otherwise the background
        // behind the gradient (there for IE<=9 fallback) gets mismatched
        transition.call(this, 'background-position .1s linear');
    });

    // Focus state for keyboard and accessibility
    tea.rule("&:focus",function(){
        tab_focus.call(this);
    });

    // Active state
    tea.rule("&.active,\n"+
    "&:active",function(){
        tea.rule("background-image: none");
        box_shadow.call(this, 'inset 0 2px 4px rgba(0,0,0,.15), 0 1px 2px rgba(0,0,0,.05)');
        tea.rule("background-color: "+(darken(white, 10)));
        tea.rule("background-color: "+(darken(white, 15))+" e(\"\\9\")");
        tea.rule("color: rgba(0,0,0,.5)");
        tea.rule("outline: 0");
    });

    // Disabled state
    tea.rule("&.disabled,\n"+
    "&[disabled]",function(){
        tea.rule("cursor: default");
        tea.rule("background-image: none");
        tea.rule("background-color: "+(darken(white, 10)));
        opacity.call(this, 65);
        box_shadow.call(this, 'none');
    });                                
}
}})//@ sourceURL=../tools/donut/form/button.tea
};
teacss.parsed["../tools/donut/form/forms.tea"] = {func:(function(){with (teacss.functions){
// Forms.less
// Base styles for various input types, form layouts, and states
// -------------------------------------------------------------


// GENERAL STYLES
// --------------

baseLineHeight_1_5 = (parseFloat(baseLineHeight) * 1.5)+'px';
baseLineHeight_2 = (parseFloat(baseLineHeight) * 2)+'px';
baseLineHeight_d2 = (parseFloat(baseLineHeight) / 2)+'px';
baseLineHeight_m1 = (parseFloat(baseLineHeight) - 1)+'px';

baseFontSize_1_5 = (parseFloat(baseFontSize) * 1.5)+'px';
baseFontSize_2 = (parseFloat(baseFontSize) * 2)+'px';


// Placeholder text
// -------------------------
placeholder = function (color) {
    color = color || placeholderText;
    tea.rule(":-moz-placeholder",function(){
        tea.rule("color: "+(color));
    });
    tea.rule("::-webkit-input-placeholder",function(){
        tea.rule("color: "+(color));
    });
}

// Input grid system
// -------------------------
inputGridSystem = {}
inputGridSystem.inputColumns = function (gridGutterWidth, gridColumnWidth, gridRowWidth, columns) {
    tea.rule("width: "+(((gridColumnWidth) * columns) + (gridGutterWidth * (columns - 1)) - 10)+"px");
}
inputGridSystem.generate = function (gridColumns, gridColumnWidth, gridGutterWidth) {
    var gridRowWidth = (gridColumns * gridColumnWidth) + (gridGutterWidth * (gridColumns - 1));
    tea.rule("input,\n"+
    "select,\n"+
    "textarea,\n"+
    ".uneditable-input",function(){
        tea.rule("&.span1",function(){ inputGridSystem.inputColumns.call(this, gridGutterWidth, gridColumnWidth, gridRowWidth, 1); });
        tea.rule("&.span2",function(){ inputGridSystem.inputColumns.call(this, gridGutterWidth, gridColumnWidth, gridRowWidth, 2); });
        tea.rule("&.span3",function(){ inputGridSystem.inputColumns.call(this, gridGutterWidth, gridColumnWidth, gridRowWidth, 3); });
        tea.rule("&.span4",function(){ inputGridSystem.inputColumns.call(this, gridGutterWidth, gridColumnWidth, gridRowWidth, 4); });
        tea.rule("&.span5",function(){ inputGridSystem.inputColumns.call(this, gridGutterWidth, gridColumnWidth, gridRowWidth, 5); });
        tea.rule("&.span6",function(){ inputGridSystem.inputColumns.call(this, gridGutterWidth, gridColumnWidth, gridRowWidth, 6); });
        tea.rule("&.span7",function(){ inputGridSystem.inputColumns.call(this, gridGutterWidth, gridColumnWidth, gridRowWidth, 7); });
        tea.rule("&.span8",function(){ inputGridSystem.inputColumns.call(this, gridGutterWidth, gridColumnWidth, gridRowWidth, 8); });
        tea.rule("&.span9",function(){ inputGridSystem.inputColumns.call(this, gridGutterWidth, gridColumnWidth, gridRowWidth, 9); });
        tea.rule("&.span10",function(){ inputGridSystem.inputColumns.call(this, gridGutterWidth, gridColumnWidth, gridRowWidth, 10); });
        tea.rule("&.span11",function(){ inputGridSystem.inputColumns.call(this, gridGutterWidth, gridColumnWidth, gridRowWidth, 11); });
        tea.rule("&.span12",function(){ inputGridSystem.inputColumns.call(this, gridGutterWidth, gridColumnWidth, gridRowWidth, 12); });
    });
}


forms = function () {
    // Make all forms have space below them
    tea.rule("form",function(){
        tea.rule("margin: 0 0 "+(baseLineHeight));
    });

    tea.rule("fieldset",function(){
        tea.rule("padding: 0");
        tea.rule("margin: 0");
        tea.rule("border: 0");
    });

    // Groups of fields with labels on top (legends)
    tea.rule("legend",function(){
        tea.rule("display: block");
        tea.rule("width: 100%");
        tea.rule("padding: 0");
        tea.rule("margin-bottom: "+(baseLineHeight_1_5));
        tea.rule("font-size: "+(baseFontSize_1_5));
        tea.rule("line-height: "+(baseLineHeight_2));
        tea.rule("color: "+(grayDark));
        tea.rule("border: 0");
        tea.rule("border-bottom: 1px solid #eee");
    });

    // Set font for forms
    tea.rule("label,\n"+
    "input,\n"+
    "button,\n"+
    "select,\n"+
    "textarea",function(){
        font.sans_serif.call(this, baseFontSize,'normal',baseLineHeight);
    });

    // Identify controls by their labels
    tea.rule("label",function(){
        tea.rule("display: block");
        tea.rule("margin-bottom: 5px");
        tea.rule("color: "+(grayDark));
    });

    // Inputs, Textareas, Selects
    tea.rule("input,\n"+
    "textarea,\n"+
    "select,\n"+
    ".uneditable-input",function(){
        tea.rule("display: inline-block");
        tea.rule("width: 210px");
        tea.rule("height: "+(baseLineHeight));
        tea.rule("padding: 4px");
        tea.rule("margin-bottom: 9px");
        tea.rule("font-size: "+(baseFontSize));
        tea.rule("line-height: "+(baseLineHeight));
        tea.rule("color: "+(gray));
        tea.rule("border: 1px solid #ccc");
        border_radius.call(this, '3px');
    });
    tea.rule(".uneditable-textarea",function(){
        tea.rule("width: auto");
        tea.rule("height: auto");
    });

    // Inputs within a label
    tea.rule("label input,\n"+
    "label textarea,\n"+
    "label select",function(){
        tea.rule("display: block");
    });

    // Mini reset for unique input types
    tea.rule("input[type=\"image\"],\n"+
    "input[type=\"checkbox\"],\n"+
    "input[type=\"radio\"]",function(){
        tea.rule("width: auto");
        tea.rule("height: auto");
        tea.rule("padding: 0");
        tea.rule("margin: 3px 0");
        tea.rule("*margin-top: 0"); /* IE7 */
        tea.rule("line-height: normal");
        tea.rule("border: 0");
        tea.rule("cursor: pointer");
        tea.rule("border-radius: 0 e(\"\\0/\")"); // Nuke border-radius for IE9 only
    });

    // Reset the file input to browser defaults
    tea.rule("input[type=\"file\"]",function(){
        tea.rule("padding: initial");
        tea.rule("line-height: initial");
        tea.rule("border: initial");
        tea.rule("background-color: "+(white));
        tea.rule("background-color: initial");
        box_shadow.call(this, 'none');
    });

    // Help out input buttons
    tea.rule("input[type=\"button\"],\n"+
    "input[type=\"reset\"],\n"+
    "input[type=\"submit\"]",function(){
        tea.rule("width: auto");
        tea.rule("height: auto");
    });

    // Set the height of select and file controls to match text inputs
    tea.rule("select,\n"+
    "input[type=\"file\"]",function(){
        tea.rule("height: 28px"); /* In IE7, the height of the select element cannot be changed by height, only font-size */
        tea.rule("*margin-top: 4px"); /* For IE7, add top margin to align select with labels */
        tea.rule("line-height: 28px");
    });

    // Chrome on Linux and Mobile Safari need background-color
    tea.rule("select",function(){
        tea.rule("width: 220px"); // default input width + 10px of padding that doesn't get applied
        tea.rule("background-color: "+(white));
    });

    // Make multiple select elements height not fixed
    tea.rule("select[multiple],\n"+
    "select[size]",function(){
        tea.rule("height: auto");
    });

    // Remove shadow from image inputs
    tea.rule("input[type=\"image\"]",function(){
        box_shadow.call(this, 'none');
    });

    // Make textarea height behave
    tea.rule("textarea",function(){
        tea.rule("height: auto");
    });

    // Hidden inputs
    tea.rule("input[type=\"hidden\"]",function(){
        tea.rule("display: none");
    });



    // CHECKBOXES & RADIOS
    // -------------------

    // Indent the labels to position radios/checkboxes as hanging
    tea.rule(".radio,\n"+
    ".checkbox",function(){
        tea.rule("padding-left: 18px");
    });
    tea.rule(".radio input[type=\"radio\"],\n"+
    ".checkbox input[type=\"checkbox\"]",function(){
        tea.rule("float: left");
        tea.rule("margin-left: -18px");
    });

    // Move the options list down to align with labels
    tea.rule(".controls > .radio:first-child,\n"+
    ".controls > .checkbox:first-child",function(){
        tea.rule("padding-top: 5px"); // has to be padding because margin collaspes
    });

    // Radios and checkboxes on same line
    tea.rule(".radio.inline,\n"+
    ".checkbox.inline",function(){
        tea.rule("display: inline-block");
        tea.rule("margin-bottom: 0");
        tea.rule("vertical-align: middle");
    });
    tea.rule(".radio.inline + .radio.inline,\n"+
    ".checkbox.inline + .checkbox.inline",function(){
        tea.rule("margin-left: 10px"); // space out consecutive inline controls
    });
    // But don't forget to remove their padding on first-child
    tea.rule(".controls > .radio.inline:first-child,\n"+
    ".controls > .checkbox.inline:first-child",function(){
        tea.rule("padding-top: 0");
    });



    // FOCUS STATE
    // -----------

    tea.rule("input,\n"+
    "textarea",function(){
        box_shadow.call(this, 'inset 0 1px 1px rgba(0,0,0,.075)');
        transition.call(this, 'border linear .2s, box-shadow linear .2s');
    });
    tea.rule("input:focus,\n"+
    "textarea:focus",function(){
        tea.rule("border-color: rgba(82,168,236,.8)");
        shadow = 'inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(82,168,236,.6)';
        box_shadow.call(this, shadow);
        tea.rule("outline: 0");
        tea.rule("outline: thin dotted \\9"); /* IE6-8 */
    });
    tea.rule("input[type=\"file\"]:focus,\n"+
    "input[type=\"checkbox\"]:focus,\n"+
    "select:focus",function(){
        box_shadow.call(this, 'none'); // override for file inputs
        tab_focus.call(this);
    });



    // INPUT SIZES
    // -----------

    // General classes for quick sizes
    tea.rule(".input-mini",function(){ tea.rule("width: 60px"); });
    tea.rule(".input-small",function(){ tea.rule("width: 90px"); });
    tea.rule(".input-medium",function(){ tea.rule("width: 150px"); });
    tea.rule(".input-large",function(){ tea.rule("width: 210px"); });
    tea.rule(".input-xlarge",function(){ tea.rule("width: 270px"); });
    tea.rule(".input-xxlarge",function(){ tea.rule("width: 530px"); });

    // Grid style input sizes
    tea.rule("input[class*=\"span\"],\n"+
    "select[class*=\"span\"],\n"+
    "textarea[class*=\"span\"],\n"+
    ".uneditable-input",function(){
        tea.rule("float: none");
        tea.rule("margin-left: 0");
    });

    // GRID SIZING FOR INPUTS
    // ----------------------

    inputGridSystem.generate.call(this, grid.columnCount, grid.columnWidth, grid.gutterWidth);

    // DISABLED STATE
    // --------------

    // Disabled and read-only inputs
    tea.rule("input[disabled],\n"+
    "select[disabled],\n"+
    "textarea[disabled],\n"+
    "input[readonly],\n"+
    "select[readonly],\n"+
    "textarea[readonly]",function(){
        tea.rule("background-color: #f5f5f5");
        tea.rule("border-color: #ddd");
        tea.rule("cursor: not-allowed");
    });




    // FORM FIELD FEEDBACK STATES
    // --------------------------

    // Mixin for form field states
    formFieldState = function (textColor,borderColor,backgroundColor) {
        textColor = textColor || '#555'; borderColor = borderColor || '#ccc'; backgroundColor = backgroundColor || '#f5f5f5';
        // Set the text color
        tea.rule("> label,\n"+
        ".help-block,\n"+
        ".help-inline",function(){
            tea.rule("color: "+(textColor));
        });
        // Style inputs accordingly
        tea.rule("input,\n"+
        "select,\n"+
        "textarea",function(){
            tea.rule("color: "+(textColor));
            tea.rule("border-color: "+(borderColor));
            tea.rule("&:focus",function(){
                tea.rule("border-color: "+(darken(borderColor, 10)));
                box_shadow.call(this, '0 0 6px '+lighten(borderColor, 20));
            });
        });
        // Give a small background color for input-prepend/-append
        tea.rule(".input-prepend .add-on,\n"+
        ".input-append .add-on",function(){
            tea.rule("color: "+(textColor));
            tea.rule("background-color: "+(backgroundColor));
            tea.rule("border-color: "+(textColor));
        });
    }
    // Warning
    tea.rule(".control-group.warning",function(){
        formFieldState.call(this, warningText, warningText, warningBackground);
    });
    // Error
    tea.rule(".control-group.error",function(){
        formFieldState.call(this, errorText, errorText, errorBackground);
    });
    // Success
    tea.rule(".control-group.success",function(){
        formFieldState.call(this, successText, successText, successBackground);
    });

    // HTML5 invalid states
    // Shares styles with the .control-group.error above
    tea.rule("input:focus:required:invalid,\n"+
    "textarea:focus:required:invalid,\n"+
    "select:focus:required:invalid",function(){
        tea.rule("color: #b94a48");
        tea.rule("border-color: #ee5f5b");
        tea.rule("&:focus",function(){
            tea.rule("border-color: darken(#ee5f5b, 10%)");
            box_shadow.call(this, '0 0 6px '+lighten('#ee5f5b', 20));
        });
    });



    // FORM ACTIONS
    // ------------

    tea.rule(".form-actions",function(){
        tea.rule("padding: "+(baseLineHeight_m1)+" 20px "+(baseLineHeight));
        tea.rule("margin-top: "+(baseLineHeight));
        tea.rule("margin-bottom: "+(baseLineHeight));
        tea.rule("background-color: #f5f5f5");
        tea.rule("border-top: 1px solid #ddd");
    });

    // For text that needs to appear as an input but should not be an input
    tea.rule(".uneditable-input",function(){
        tea.rule("display: block");
        tea.rule("background-color: "+(white));
        tea.rule("border-color: #eee");
        box_shadow.call(this, 'inset 0 1px 2px rgba(0,0,0,.025)');
        tea.rule("cursor: not-allowed");
    });

    // Placeholder text gets special styles; can't be bundled together though for some reason
    placeholder.call(this, grayLight);



    // HELP TEXT
    // ---------

    tea.rule(".help-block",function(){
        tea.rule("margin-top: 5px");
        tea.rule("margin-bottom: 0");
        tea.rule("color: "+(grayLight));
    });

    tea.rule(".help-inline",function(){
        tea.rule("display: inline-block");
        ie7_inline_block.call(this);
        tea.rule("margin-bottom: 9px");
        tea.rule("vertical-align: middle");
        tea.rule("padding-left: 5px");
    });



    // INPUT GROUPS
    // ------------

    // Allow us to put symbols and text within the input field for a cleaner look
    tea.rule(".input-prepend,\n"+
    ".input-append",function(){
        tea.rule("margin-bottom: 5px");
        clearfix.call(this); // Clear the float to prevent wrapping
        tea.rule("input,\n"+
        ".uneditable-input",function(){
            border_radius.call(this, '0 3px 3px 0');
            tea.rule("&:focus",function(){
                tea.rule("position: relative");
                tea.rule("z-index: 2");
            });
        });
        tea.rule(".uneditable-input",function(){
            tea.rule("border-left-color: #ccc");
        });
        tea.rule(".add-on",function(){
            tea.rule("float: left");
            tea.rule("display: block");
            tea.rule("width: auto");
            tea.rule("min-width: 16px");
            tea.rule("height: "+(baseLineHeight));
            tea.rule("margin-right: -1px");
            tea.rule("padding: 4px 5px");
            tea.rule("font-weight: normal");
            tea.rule("line-height: "+(baseLineHeight));
            tea.rule("color: "+(grayLight));
            tea.rule("text-align: center");
            tea.rule("text-shadow: 0 1px 0 "+(white));
            tea.rule("background-color: #f5f5f5");
            tea.rule("border: 1px solid #ccc");
            border_radius.call(this, '3px 0 0 3px');
        });
        tea.rule(".active",function(){
            tea.rule("background-color: "+(lighten(green, 30)));
            tea.rule("border-color: "+(green));
        });
    });
    tea.rule(".input-prepend",function(){
        tea.rule(".add-on",function(){
            tea.rule("*margin-top: 1px"); /* IE6-7 */
        });
    });
    tea.rule(".input-append",function(){
        tea.rule("input,\n"+
        ".uneditable-input",function(){
            tea.rule("float: left");
            border_radius.call(this, '3px 0 0 3px');
        });
        tea.rule(".uneditable-input",function(){
            tea.rule("border-right-color: #ccc");
        });
        tea.rule(".add-on",function(){
            tea.rule("margin-right: 0");
            tea.rule("margin-left: -1px");
            border_radius.call(this, '0 3px 3px 0');
        });
        tea.rule("input:first-child",function(){
            // In IE7, having a hasLayout container (from clearfix's zoom:1) can make the first input
            // inherit the sum of its ancestors' margins.
            tea.rule("*margin-left: -160px");

            tea.rule("&+.add-on",function(){
                tea.rule("*margin-left: -21px");
            });
        });
    });



    // SEARCH FORM
    // -----------

    tea.rule(".search-query",function(){
        tea.rule("padding-left: 14px");
        tea.rule("padding-right: 14px");
        tea.rule("margin-bottom: 0"); // remove the default margin on all inputs
        border_radius.call(this, '14px');
    });



    // HORIZONTAL & VERTICAL FORMS
    // ---------------------------

    // Common properties
    // -----------------

    tea.rule(".form-search,\n"+
    ".form-inline,\n"+
    ".form-horizontal",function(){
        tea.rule("input,\n"+
        "textarea,\n"+
        "select,\n"+
        ".help-inline,\n"+
        ".uneditable-input",function(){
            tea.rule("display: inline-block");
            tea.rule("margin-bottom: 0");
        });
    });
    tea.rule(".form-search label,\n"+
    ".form-inline label,\n"+
    ".form-search .input-append,\n"+
    ".form-inline .input-append,\n"+
    ".form-search .input-prepend,\n"+
    ".form-inline .input-prepend",function(){
        tea.rule("display: inline-block");
    });
    // Make the prepend and append add-on vertical-align: middle;
    tea.rule(".form-search .input-append .add-on,\n"+
    ".form-inline .input-prepend .add-on,\n"+
    ".form-search .input-append .add-on,\n"+
    ".form-inline .input-prepend .add-on",function(){
        tea.rule("vertical-align: middle");
    });

    // Margin to space out fieldsets
    tea.rule(".control-group",function(){
        tea.rule("margin-bottom: "+(baseLineHeight_2));
    });

    // Horizontal-specific styles
    // --------------------------

    tea.rule(".form-horizontal",function(){
        // Legend collapses margin, so we're relegated to padding
        tea.rule("legend + .control-group",function(){
            tea.rule("margin-top: "+(baseLineHeight));
            tea.rule("-webkit-margin-top-collapse: separate");
        });
        // Increase spacing between groups
        tea.rule(".control-group",function(){
            tea.rule("margin-bottom: "+(baseLineHeight));
            clearfix.call(this);
        });
        // Float the labels left
        tea.rule(".control-group > label",function(){
            tea.rule("float: left");
            tea.rule("width: 140px");
            tea.rule("padding-top: 5px");
            tea.rule("text-align: right");
        });
        // Move over all input controls and content
        tea.rule(".controls",function(){
            tea.rule("margin-left: 160px");
        });
        // Move over buttons in .form-actions to align with .controls
        tea.rule(".form-actions",function(){
            tea.rule("padding-left: 160px");
        });
    });
}

}})//@ sourceURL=../tools/donut/form/forms.tea
};
teacss.parsed["../tools/donut/form/pagination.tea"] = {func:(function(){with (teacss.functions){
// PAGINATION
// ----------

pagination = function () {
    tea.rule("height: "+(parseFloat(baseLineHeight) * 2)+"px");
    tea.rule("margin: "+(baseLineHeight)+" 0");

    tea.rule("ul",function(){
        tea.rule("display: inline-block");
        ie7_inline_block.call(this);
        tea.rule("margin-left: 0");
        tea.rule("margin-bottom: 0");
        border_radius.call(this, '3px');
        box_shadow.call(this, '0 1px 2px rgba(0,0,0,.05)');
    });
    tea.rule("li",function(){
        tea.rule("display: inline");
    });
    tea.rule("a",function(){
        tea.rule("float: left");
        tea.rule("padding: 0 14px");
        tea.rule("line-height: "+(parseFloat((baseLineHeight * 2) - 2))+"px");
        tea.rule("text-decoration: none");
        tea.rule("border: 1px solid #ddd");
        tea.rule("border-left-width: 0");
    });
    tea.rule("a:hover,\n"+
    ".active a",function(){
        tea.rule("background-color: #f5f5f5");
    });
    tea.rule(".active a",function(){
        tea.rule("color: "+(grayLight));
        tea.rule("cursor: default");
    });
    tea.rule(".disabled a,\n"+
    ".disabled a:hover",function(){
        tea.rule("color: "+(grayLight));
        tea.rule("background-color: transparent");
        tea.rule("cursor: default");
    });
    tea.rule("li:first-child a",function(){
        tea.rule("border-left-width: 1px");
        border_radius.call(this, '3px 0 0 3px');
    });
    tea.rule("li:last-child a",function(){
        border_radius.call(this, '0 3px 3px 0');
    });
}

// Centered
pagination_centered = function () {
    pagination.call(this);
    tea.rule("text-align: center");
}
pagination_right = function () {
    pagination.call(this);
    tea.rule("text-align: right");
}
}})//@ sourceURL=../tools/donut/form/pagination.tea
};
teacss.parsed["../tools/donut/navigation/navs.tea"] = {func:(function(){with (teacss.functions){
// NAVIGATIONS
// -----------



// BASE CLASS
// ----------

nav = function () {
    tea.rule("margin-left: 0");
    tea.rule("margin-bottom: "+(baseLineHeight));
    tea.rule("list-style: none");

    // Make links block level
    tea.rule("> li > a",function(){
        tea.rule("display: block");
    });
    tea.rule("> li > a:hover",function(){
        tea.rule("text-decoration: none");
        tea.rule("background-color: "+(grayLighter));
    });
}


// NAV LIST
// --------

nav_list = function () {
    nav.call(this);
    tea.rule("padding-left: 14px");
    tea.rule("padding-right: 14px");
    tea.rule("margin-bottom: 0");

    tea.rule("> li > a,\n"+
    ".nav-header",function(){
        tea.rule("display: block");
        tea.rule("padding: 3px 15px");
        tea.rule("margin-left:  -15px");
        tea.rule("margin-right: -15px");
        tea.rule("text-shadow: 0 1px 0 rgba(255,255,255,.5)");
    });
    tea.rule(".nav-header",function(){
        tea.rule("font-size: 11px");
        tea.rule("font-weight: bold");
        tea.rule("line-height: "+(baseLineHeight));
        tea.rule("color: "+(grayLight));
        tea.rule("text-transform: uppercase");
    });
    tea.rule("> li + .nav-header",function(){
        tea.rule("margin-top: 9px");
    });
    tea.rule(".active > a",function(){
        tea.rule("color: "+(white));
        tea.rule("text-shadow: 0 -1px 0 rgba(0,0,0,.2)");
        tea.rule("background-color: "+(linkColor));
    });
    tea.rule(".icon",function(){
        tea.rule("margin-right: 2px");
    });
}

// TABS AND PILLS
// -------------

// Common styles

nav_tabs_and_pills = function () {
    nav.call(this);
    clearfix.call(this);
    tea.rule("> li",function(){
        tea.rule("float: left");
    });
    tea.rule("> li > a",function(){
        tea.rule("padding-right: 12px");
        tea.rule("padding-left: 12px");
        tea.rule("margin-right: 2px");
        tea.rule("line-height: 14px"); // keeps the overall height an even number
    });
}


// TABS
// ----

// Give the tabs something to sit on
nav_tabs = function () {
    nav_tabs_and_pills.call(this);

    tea.rule("border-bottom: 1px solid #ddd");
    // Make the list-items overlay the bottom border
    tea.rule("> li",function(){
        tea.rule("margin-bottom: -1px");
    });

    // Actual tabs (as links)
    tea.rule("> li > a",function(){
        tea.rule("padding-top: 9px");
        tea.rule("padding-bottom: 9px");
        tea.rule("border: 1px solid transparent");
        border_radius.call(this, '4px 4px 0 0');
        tea.rule("&:hover",function(){
            tea.rule("border-color: "+(grayLighter)+" "+(grayLighter)+" #ddd");
        });
    });
    // Active state, and it's :hover to override normal :hover
    tea.rule("> .active > a,\n"+
    "> .active > a:hover",function(){
        tea.rule("color: "+(gray));
        tea.rule("background-color: "+(white));
        tea.rule("border: 1px solid #ddd");
        tea.rule("border-bottom-color: transparent");
        tea.rule("cursor: default");
    });
}


// PILLS
// -----

nav_pills = function () {
    nav_tabs_and_pills.call(this);
    // Links rendered as pills
    tea.rule("> li > a",function(){
        tea.rule("padding-top: 8px");
        tea.rule("padding-bottom: 8px");
        tea.rule("margin-top: 2px");
        tea.rule("margin-bottom: 2px");
        border_radius.call(this, '5px');
    });

    // Active state
    tea.rule(".active > a,\n"+
    ".active > a:hover",function(){
        tea.rule("color: "+(white));
        tea.rule("background-color: "+(linkColor));
    });
}




// STACKED NAV
// -----------
/*
// Stacked tabs and pills
.nav-stacked > li {
    float: none;
}
.nav-stacked > li > a {
    margin-right: 0; // no need for the gap between nav items
}

// Tabs
.nav-tabs.nav-stacked {
    border-bottom: 0;
}
.nav-tabs.nav-stacked > li > a {
    border: 1px solid #ddd;
    .border_radius("0px");
}
.nav-tabs.nav-stacked > li:first-child > a {
    .border_radius('4px 4px 0 0');
}
.nav-tabs.nav-stacked > li:last-child > a {
    .border_radius('0 0 4px 4px');
}
.nav-tabs.nav-stacked > li > a:hover {
    border-color: #ddd;
    z-index: 2;
}

// Pills
.nav-pills.nav-stacked > li > a {
    margin-bottom: 3px;
}
.nav-pills.nav-stacked > li:last-child > a {
    margin-bottom: 1px; // decrease margin to match sizing of stacked tabs
}



// DROPDOWNS
// ---------

// Position the menu
.nav-tabs .dropdown-menu,
.nav-pills .dropdown-menu {
    margin-top: 1px;
    border-width: 1px;
}
.nav-pills .dropdown-menu {
    .border_radius('4px');
}

// Default dropdown links
// -------------------------
// Make carets use linkColor to start
.nav-tabs .dropdown-toggle .caret,
.nav-pills .dropdown-toggle .caret {
    border-top-color: @linkColor;
    margin-top: 6px;
}
.nav-tabs .dropdown-toggle:hover .caret,
.nav-pills .dropdown-toggle:hover .caret {
    border-top-color: @linkColorHover;
}

// Active dropdown links
// -------------------------
.nav-tabs .active .dropdown-toggle .caret,
.nav-pills .active .dropdown-toggle .caret {
    border-top-color: @grayDark;
}

// Active:hover dropdown links
// -------------------------
.nav > .dropdown.active > a:hover {
    color: @black;
    cursor: pointer;
}

// Open dropdowns
// -------------------------
.nav-tabs .open .dropdown-toggle,
.nav-pills .open .dropdown-toggle,
.nav > .open.active > a:hover {
    color: @white;
    background-color: @grayLight;
    border-color: @grayLight;
}
.nav .open .caret,
.nav .open.active .caret,
.nav .open a:hover .caret {
    border-top-color: @white;
    .opacity(100);
}

// Dropdowns in stacked tabs
.tabs-stacked .open > a:hover {
    border-color: @grayLight;
}



// TABBABLE
// --------


// COMMON STYLES
// -------------

// Clear any floats
.tabbable {
    .clearfix();
}

// Remove border on bottom, left, right
.tabs-below .nav-tabs,
.tabs-right .nav-tabs,
.tabs-left .nav-tabs {
    border-bottom: 0;
}

// Show/hide tabbable areas
.tab-content > .tab-pane,
.pill-content > .pill-pane {
    display: none;
}
.tab-content > .active,
.pill-content > .active {
    display: block;
}


// BOTTOM
// ------

.tabs-below .nav-tabs {
    border-top: 1px solid #ddd;
}
.tabs-below .nav-tabs > li {
    margin-top: -1px;
    margin-bottom: 0;
}
.tabs-below .nav-tabs > li > a {
    .border_radius('0 0 4px 4px');
    &:hover {
        border-bottom-color: transparent;
        border-top-color: #ddd;
    }
}
.tabs-below .nav-tabs .active > a,
.tabs-below .nav-tabs .active > a:hover {
    border-color: transparent #ddd #ddd #ddd;
}

// LEFT & RIGHT
// ------------

// Common styles
.tabs-left .nav-tabs > li,
.tabs-right .nav-tabs > li {
    float: none;
}
.tabs-left .nav-tabs > li > a,
.tabs-right .nav-tabs > li > a {
    min-width: 74px;
    margin-right: 0;
    margin-bottom: 3px;
}

// Tabs on the left
.tabs-left .nav-tabs {
    float: left;
    margin-right: 19px;
    border-right: 1px solid #ddd;
}
.tabs-left .nav-tabs > li > a {
    margin-right: -1px;
    .border_radius('4px 0 0 4px');
}
.tabs-left .nav-tabs > li > a:hover {
    border-color: @grayLighter #ddd @grayLighter @grayLighter;
}
.tabs-left .nav-tabs .active > a,
.tabs-left .nav-tabs .active > a:hover {
    border-color: #ddd transparent #ddd #ddd;
    *border-right-color: @white;
}

// Tabs on the right
.tabs-right .nav-tabs {
    float: right;
    margin-left: 19px;
    border-left: 1px solid #ddd;
}
.tabs-right .nav-tabs > li > a {
    margin-left: -1px;
    .border_radius('0 4px 4px 0');
}
.tabs-right .nav-tabs > li > a:hover {
    border-color: @grayLighter @grayLighter @grayLighter #ddd;
}
.tabs-right .nav-tabs .active > a,
.tabs-right .nav-tabs .active > a:hover {
    border-color: #ddd #ddd #ddd transparent;
    *border-left-color: @white;
} */

}})//@ sourceURL=../tools/donut/navigation/navs.tea
};
teacss.parsed["../tools/donut/navigation/navbar.tea"] = {func:(function(){with (teacss.functions){
// NAVBAR (FIXED AND STATIC)
// -------------------------


// COMMON STYLES
// -------------

navbar = function () {
    tea.rule("overflow: visible");
    tea.rule("margin-bottom: "+(baseLineHeight));

    // Gradient is applied to it's own element because overflow visible is not honored by IE when filter is present
    tea.rule("> div",function(){
        tea.rule("padding-left:  20px");
        tea.rule("padding-right: 20px");
        gradient.vertical.call(this, navbarBackgroundHighlight, navbarBackground);
        border_radius.call(this, '4px');
        shadow = '0 1px 3px rgba(0,0,0,.25), inset 0 -1px 0 rgba(0,0,0,.1)';
        box_shadow.call(this, shadow);
    });

    tea.rule("ul",function(){
        tea.rule("position: relative");
        tea.rule("left: 0");
        tea.rule("display: block");
        tea.rule("float: left");
        tea.rule("margin: 0 10px 0 0");
    });
    tea.rule("ul.pull-right",function(){
        tea.rule("float: right"); // redeclare due to specificity
    });
    tea.rule("ul > li",function(){
        tea.rule("display: block");
        tea.rule("float: left");
    });

    // Links
    tea.rule("ul > li > a",function(){
        tea.rule("float: none");
        tea.rule("padding: 10px 10px 11px");
        tea.rule("line-height: 19px");
        tea.rule("color: "+(navbarLinkColor));
        tea.rule("text-decoration: none");
        tea.rule("text-shadow: 0 -1px 0 rgba(0,0,0,.25)");
    });
    // Hover
    tea.rule("ul > li > a:hover",function(){
        tea.rule("background-color: transparent");
        tea.rule("color: "+(navbarLinkColorHover));
        tea.rule("text-decoration: none");
    });

    // Active nav items
    tea.rule("ul .active > a,\n"+
    "ul .active > a:hover",function(){
        tea.rule("color: "+(navbarLinkColorHover));
        tea.rule("text-decoration: none");
        tea.rule("background-color: "+(navbarBackground));
        tea.rule("background-color: rgba(0,0,0,.5)");
    });
}

// Navbar button for toggling navbar items in responsive layouts
btn_navbar = function () {
    tea.rule("display: none");
    tea.rule("float: right");
    tea.rule("padding: 7px 10px");
    tea.rule("margin-left: 5px");
    tea.rule("margin-right: 5px");
    buttonBackground.call(this, navbarBackgroundHighlight, navbarBackground);
    shadow = 'inset 0 1px 0 rgba(255,255,255,.1), 0 1px 0 rgba(255,255,255,.075)';
    box_shadow.call(this, shadow);

    tea.rule(".icon-bar",function(){
        tea.rule("display: block");
        tea.rule("width: 18px");
        tea.rule("height: 2px");
        tea.rule("background-color: #f5f5f5");
        border_radius.call(this, '1px');
        box_shadow.call(this, '0 1px 0 rgba(0,0,0,.25)');
    });

    tea.rule(".icon-bar + .icon-bar",function(){
        tea.rule("margin-top: 3px");
    });

    // Brand, links, text, and buttons
    // Hover and active states
    tea.rule(".brand:hover",function(){
        tea.rule("text-decoration: none");
    });
    // Website or project name
    tea.rule(".brand",function(){
        tea.rule("float: left");
        tea.rule("display: block");
        tea.rule("padding: 8px 20px 12px");
        tea.rule("margin-left: -20px"); // negative indent to left-align the text down the page
        tea.rule("font-size: 20px");
        tea.rule("font-weight: 200");
        tea.rule("line-height: 1");
        tea.rule("color: "+(white));
    });
    // Plain text in topbar
    tea.rule(".navbar-text",function(){
        tea.rule("margin-bottom: 0");
        tea.rule("line-height: 40px");
        tea.rule("color: "+(navbarText));
        tea.rule("a:hover",function(){
            tea.rule("color: "+(white));
            tea.rule("background-color: transparent");
        });
    });
    // Buttons in navbar
    tea.rule(".btn,\n"+
    ".btn-group",function(){
        tea.rule("margin-top: 5px"); // make buttons vertically centered in navbar
    });
    tea.rule(".btn-group .btn",function(){
        tea.rule("margin-top: 0");
    });

    // Navbar forms
    tea.rule("form",function(){
        tea.rule("margin-bottom: 0"); // remove default bottom margin
        clearfix.call(this);
        tea.rule("input,\n"+
        "select",function(){
            tea.rule("display: inline-block");
            tea.rule("margin-top: 5px");
            tea.rule("margin-bottom: 0");
        });
        tea.rule(".radio,\n"+
        ".checkbox",function(){
            tea.rule("margin-top: 5px");
        });
        tea.rule("input[type=\"image\"],\n"+
        "input[type=\"checkbox\"],\n"+
        "input[type=\"radio\"]",function(){
            tea.rule("margin-top: 3px");
        });
    });
}
// Override the default collapsed state
//.nav-collapse.collapse {
//    height: auto;
//}



// Navbar search
navbar_search = function () {
    tea.rule("position: relative");
    tea.rule("float: left");
    tea.rule("margin-top: 6px");
    tea.rule("margin-bottom: 0");
    tea.rule(".search-query",function(){
        tea.rule("padding: 4px 9px");
        tea.rule("#font > .sans-serif(13px, normal, 1)");
        tea.rule("color: "+(white));
        tea.rule("color: rgba(255,255,255,.75)");
        tea.rule("background: #666");
        tea.rule("background: rgba(255,255,255,.3)");
        tea.rule("border: 1px solid #111");
        shadow = 'inset 0 1px 2px rgba(0,0,0,.1), 0 1px 0px rgba(255,255,255,.15)';
        box_shadow.call(this, shadow);
        transition.call(this, 'none');

        // Placeholder text gets special styles; can't be bundled together though for some reason
        placeholder.call(this, @grayLighter);

        // Hover states
        tea.rule("&:hover",function(){
            tea.rule("color: "+(white));
            tea.rule("background-color: "+(grayLight));
            tea.rule("background-color: rgba(255,255,255,.5)");
        });
        // Focus states (we use .focused since IE8 and down doesn't support :focus)
        tea.rule("&:focus,\n"+
        "&.focused",function(){
            tea.rule("padding: 5px 10px");
            tea.rule("color: "+(grayDark));
            tea.rule("text-shadow: 0 1px 0 "+(white));
            tea.rule("background-color: "+(white));
            tea.rule("border: 0");
            box_shadow.call(this, '0 0 3px rgba(0,0,0,.15)');
            tea.rule("outline: 0");
        });
    });
}


// FIXED NAVBAR
// ------------

navbar_fixed_top = function () {
    navbar.call(this);
    tea.rule("position: fixed");
    tea.rule("top: 0");
    tea.rule("right: 0");
    tea.rule("left: 0");
    tea.rule("z-index: "+(zindexFixedNavbar));

    tea.rule("> div",function(){
        tea.rule("padding-left:  0");
        tea.rule("padding-right: 0");
        border_radius.call(this, '0px');
    });
}

// NAVIGATION
// ----------

/*.navbar .nav {
    position: relative;
    left: 0;
    display: block;
    float: left;
    margin: 0 10px 0 0;
}
.navbar .nav.pull-right {
    float: right; // redeclare due to specificity
}
.navbar .nav > li {
    display: block;
    float: left;
}

// Links
.navbar .nav > li > a {
    float: none;
    padding: 10px 10px 11px;
    line-height: 19px;
    color: @navbarLinkColor;
    text-decoration: none;
    text-shadow: 0 -1px 0 rgba(0,0,0,.25);
}
// Hover
.navbar .nav > li > a:hover {
    background-color: transparent;
    color: @navbarLinkColorHover;
    text-decoration: none;
}

// Active nav items
.navbar .nav .active > a,
.navbar .nav .active > a:hover {
    color: @navbarLinkColorHover;
    text-decoration: none;
    background-color: @navbarBackground;
    background-color: rgba(0,0,0,.5);
}

// Dividers (basically a vertical hr)
.navbar .divider-vertical {
    height: @navbarHeight;
    width: 1px;
    margin: 0 9px;
    overflow: hidden;
    background-color: @navbarBackground;
    border-right: 1px solid @navbarBackgroundHighlight;
}

// Secondary (floated right) nav in topbar
.navbar .nav.pull-right {
    margin-left: 10px;
    margin-right: 0;
}



// Dropdown menus
// --------------

// Menu position and menu carets
.navbar .dropdown-menu {
    margin-top: 1px;
    .border_radius('4px');
    &:before {
        content: '';
        display: inline-block;
        border-left:   7px solid transparent;
        border-right:  7px solid transparent;
        border-bottom: 7px solid #ccc;
        border-bottom-color: rgba(0,0,0,.2);
        position: absolute;
        top: -7px;
        left: 9px;
    }
    &:after {
        content: '';
        display: inline-block;
        border-left:   6px solid transparent;
        border-right:  6px solid transparent;
        border-bottom: 6px solid @white;
        position: absolute;
        top: -6px;
        left: 10px;
    }
}

// Dropdown toggle caret
.navbar .nav .dropdown-toggle .caret,
.navbar .nav .open.dropdown .caret {
    border-top-color: @white;
}
.navbar .nav .active .caret {
    .opacity(100);
}

// Remove background color from open dropdown
.navbar .nav .open > .dropdown-toggle,
.navbar .nav .active > .dropdown-toggle,
.navbar .nav .open.active > .dropdown-toggle {
    background-color: transparent;
}

// Dropdown link on hover
.navbar .nav .active > .dropdown-toggle:hover {
    color: @white;
}

// Right aligned menus need alt position
.navbar .nav.pull-right .dropdown-menu {
    left: auto;
    right: 0;
    &:before {
        left: auto;
        right: 12px;
    }
    &:after {
        left: auto;
        right: 13px;
    }
} */
}})//@ sourceURL=../tools/donut/navigation/navbar.tea
};
teacss.parsed["../tools/donut/layout/wells.tea"] = {func:(function(){with (teacss.functions){
// WELLS
// -----

well = function () {
    tea.rule("min-height: 20px");
    tea.rule("padding: 19px");
    tea.rule("margin-bottom: 20px");
    tea.rule("background-color: #f5f5f5");
    tea.rule("border: 1px solid #eee");
    tea.rule("border: 1px solid rgba(0,0,0,.05)");
    border_radius.call(this, '4px');
    box_shadow.call(this, 'inset 0 1px 1px rgba(0,0,0,.05)');

    tea.rule("blockquote",function(){
        tea.rule("border-color: #ddd");
        tea.rule("border-color: rgba(0,0,0,.15)");
    });
}

}})//@ sourceURL=../tools/donut/layout/wells.tea
};
teacss.parsed["../tools/donut/layout/alerts.tea"] = {func:(function(){with (teacss.functions){
// ALERT STYLES
// ------------
alert_block = function (type,block) {
    if (type.indexOf("block")!=-1) block = true;

    tea.rule("padding: 8px 35px 8px 14px");
    tea.rule("margin-bottom: "+(baseLineHeight));
    tea.rule("text-shadow: 0 1px 0 rgba(255,255,255,.5)");
    tea.rule("background-color: "+(warningBackground));
    tea.rule("border: 1px solid "+(warningBorder));
    border_radius.call(this, '4px');

    tea.rule("color: "+(warningText));
    tea.rule("h4",function(){
        tea.rule("color: "+(warningText));
    });

    tea.rule(".close",function(){
        tea.rule("position: relative");
        tea.rule("top: -2px");
        tea.rule("right: -21px");
        tea.rule("line-height: 18px");
    });

    if (type=='success') {
        tea.rule("background-color: "+(successBackground));
        tea.rule("border-color: "+(successBorder));
        tea.rule("&,h4",function(){
            tea.rule("color: "+(successText));
        });
    }

    if (type=='danger' || type=='error') {
        tea.rule("background-color: "+(errorBackground));
        tea.rule("border-color: "+(errorBorder));
        tea.rule("&,h4",function(){
            tea.rule("color: "+(errorText));
        });
    }

    if (type=='info') {
        tea.rule("background-color: "+(infoBackground));
        tea.rule("border-color: "+(infoBorder));
        tea.rule("&,h4",function(){
            tea.rule("color: "+(infoText));
        });
    }

    if (block) {
        tea.rule("padding-top: 14px");
        tea.rule("padding-bottom: 14px");

        tea.rule("> p, > ul",function(){
            tea.rule("margin-bottom: 0");
        });
        tea.rule("p + p",function(){
            tea.rule("margin-top: 5px");
        });
    }
}
}})//@ sourceURL=../tools/donut/layout/alerts.tea
};teacss.parsed["../tools/donut/donut.tea"].func()